//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbitem
{


    
    /// <summary>
    /// ID
    /// </summary>
    public int id;


    
    /// <summary>
    /// 钻石价值
    /// </summary>
    public int value;


    
    /// <summary>
    /// 金币价值
    /// </summary>
    public int valueCoin;


    
    /// <summary>
    /// 道具类型
    /// </summary>
    public int type;


    
    /// <summary>
    /// 道具子类
    /// </summary>
    public int subtype;


    
    /// <summary>
    /// 道具品质
    /// </summary>
    public int quality;


    
    /// <summary>
    /// 可否商城购买
    /// </summary>
    public int purchaseYn;


    
    /// <summary>
    /// 是否自动使用
    /// </summary>
    public int autoYn;


    
    /// <summary>
    /// 可否使用
    /// </summary>
    public int useYn;


    
    /// <summary>
    /// 使用效果1
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector2> useEffect;


    
    /// <summary>
    /// 使用获得
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> useDrop;


    
    /// <summary>
    /// 道具回收
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> recovery;


    //----------------------Read------------------------
    

    if (id == ID)
        return playerData.playerData.id;
    

    if (id == 钻石价值)
        return playerData.playerData.value;
    

    if (id == 金币价值)
        return playerData.playerData.valueCoin;
    

    if (id == 道具类型)
        return playerData.playerData.type;
    

    if (id == 道具子类)
        return playerData.playerData.subtype;
    

    if (id == 道具品质)
        return playerData.playerData.quality;
    

    if (id == 可否商城购买)
        return playerData.playerData.purchaseYn;
    

    if (id == 是否自动使用)
        return playerData.playerData.autoYn;
    

    if (id == 可否使用)
        return playerData.playerData.useYn;
    

    if (id == 使用效果1)
        return playerData.playerData.useEffect;
    

    if (id == 使用获得)
        return playerData.playerData.useDrop;
    

    if (id == 道具回收)
        return playerData.playerData.recovery;


    //----------------------Write------------------------
    

    if (id == ID)
    {
        playerData.playerData.id += value;
    } 

    

    if (id == 钻石价值)
    {
        playerData.playerData.value += value;
    } 

    

    if (id == 金币价值)
    {
        playerData.playerData.valueCoin += value;
    } 

    

    if (id == 道具类型)
    {
        playerData.playerData.type += value;
    } 

    

    if (id == 道具子类)
    {
        playerData.playerData.subtype += value;
    } 

    

    if (id == 道具品质)
    {
        playerData.playerData.quality += value;
    } 

    

    if (id == 可否商城购买)
    {
        playerData.playerData.purchaseYn += value;
    } 

    

    if (id == 是否自动使用)
    {
        playerData.playerData.autoYn += value;
    } 

    

    if (id == 可否使用)
    {
        playerData.playerData.useYn += value;
    } 

    

    if (id == 使用效果1)
    {
        playerData.playerData.useEffect += value;
    } 

    

    if (id == 使用获得)
    {
        playerData.playerData.useDrop += value;
    } 

    

    if (id == 道具回收)
    {
        playerData.playerData.recovery += value;
    } 

        //----------------------参数面板------------------------
          
        

        parasItemsList0[0].SetInputTxt(playerData.playerData.id.ToString());
        

        parasItemsList0[1].SetInputTxt(playerData.playerData.value.ToString());
        

        parasItemsList0[2].SetInputTxt(playerData.playerData.valueCoin.ToString());
        

        parasItemsList0[3].SetInputTxt(playerData.playerData.type.ToString());
        

        parasItemsList0[4].SetInputTxt(playerData.playerData.subtype.ToString());
        

        parasItemsList0[5].SetInputTxt(playerData.playerData.quality.ToString());
        

        parasItemsList0[6].SetInputTxt(playerData.playerData.purchaseYn.ToString());
        

        parasItemsList0[7].SetInputTxt(playerData.playerData.autoYn.ToString());
        

        parasItemsList0[8].SetInputTxt(playerData.playerData.useYn.ToString());
        

        parasItemsList0[9].SetInputTxt(playerData.playerData.useEffect.ToString());
        

        parasItemsList0[10].SetInputTxt(playerData.playerData.useDrop.ToString());
        

        parasItemsList0[11].SetInputTxt(playerData.playerData.recovery.ToString());
}
}