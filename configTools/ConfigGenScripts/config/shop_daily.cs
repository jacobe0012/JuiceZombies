//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbshop_daily
{


    
    /// <summary>
    /// 标识
    /// </summary>
    public int sign;


    
    /// <summary>
    /// 刷新组id
    /// </summary>
    public int id;


    
    /// <summary>
    /// 位置
    /// </summary>
    public int pos;


    
    /// <summary>
    /// 章节限制
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector2> limitChapter;


    
    /// <summary>
    /// 获得
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> reward;


    
    /// <summary>
    /// 刷新权重
    /// </summary>
    public int power;


    
    /// <summary>
    /// 消耗
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> cost;


    
    /// <summary>
    /// 免费规则
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector2> freeRule;


    
    /// <summary>
    /// 可购买次数
    /// </summary>
    public int times;


    //----------------------Read------------------------
    

    if (id == 标识)
        return playerData.playerData.sign;
    

    if (id == 刷新组id)
        return playerData.playerData.id;
    

    if (id == 位置)
        return playerData.playerData.pos;
    

    if (id == 章节限制)
        return playerData.playerData.limitChapter;
    

    if (id == 获得)
        return playerData.playerData.reward;
    

    if (id == 刷新权重)
        return playerData.playerData.power;
    

    if (id == 消耗)
        return playerData.playerData.cost;
    

    if (id == 免费规则)
        return playerData.playerData.freeRule;
    

    if (id == 可购买次数)
        return playerData.playerData.times;


    //----------------------Write------------------------
    

    if (id == 标识)
    {
        playerData.playerData.sign += value;
    } 

    

    if (id == 刷新组id)
    {
        playerData.playerData.id += value;
    } 

    

    if (id == 位置)
    {
        playerData.playerData.pos += value;
    } 

    

    if (id == 章节限制)
    {
        playerData.playerData.limitChapter += value;
    } 

    

    if (id == 获得)
    {
        playerData.playerData.reward += value;
    } 

    

    if (id == 刷新权重)
    {
        playerData.playerData.power += value;
    } 

    

    if (id == 消耗)
    {
        playerData.playerData.cost += value;
    } 

    

    if (id == 免费规则)
    {
        playerData.playerData.freeRule += value;
    } 

    

    if (id == 可购买次数)
    {
        playerData.playerData.times += value;
    } 

        //----------------------参数面板------------------------
          
        

        parasItemsList0[0].SetInputTxt(playerData.playerData.sign.ToString());
        

        parasItemsList0[1].SetInputTxt(playerData.playerData.id.ToString());
        

        parasItemsList0[2].SetInputTxt(playerData.playerData.pos.ToString());
        

        parasItemsList0[3].SetInputTxt(playerData.playerData.limitChapter.ToString());
        

        parasItemsList0[4].SetInputTxt(playerData.playerData.reward.ToString());
        

        parasItemsList0[5].SetInputTxt(playerData.playerData.power.ToString());
        

        parasItemsList0[6].SetInputTxt(playerData.playerData.cost.ToString());
        

        parasItemsList0[7].SetInputTxt(playerData.playerData.freeRule.ToString());
        

        parasItemsList0[8].SetInputTxt(playerData.playerData.times.ToString());
}
}