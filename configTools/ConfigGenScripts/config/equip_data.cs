//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbequip_data
{


    
    /// <summary>
    /// 装备Id
    /// </summary>
    public int id;


    
    /// <summary>
    /// 部位Id
    /// </summary>
    public int posId;


    
    /// <summary>
    /// 品质id
    /// </summary>
    public int quality;


    
    /// <summary>
    /// 主词条id
    /// </summary>
    public int mainEntryId;


    
    /// <summary>
    /// 主词条初始
    /// </summary>
    public int mainEntryInit;


    
    /// <summary>
    /// 每级成长
    /// </summary>
    public int mainEntryGrow;


    
    /// <summary>
    /// 解锁技能组(仅后端传技能)
    /// </summary>
    public System.Collections.Generic.List<int> unlockSkillGroup;


    
    /// <summary>
    /// 是否为S
    /// </summary>
    public int sYn;


    //----------------------Read------------------------
    

    if (id == 装备Id)
        return playerData.playerData.id;
    

    if (id == 部位Id)
        return playerData.playerData.posId;
    

    if (id == 品质id)
        return playerData.playerData.quality;
    

    if (id == 主词条id)
        return playerData.playerData.mainEntryId;
    

    if (id == 主词条初始)
        return playerData.playerData.mainEntryInit;
    

    if (id == 每级成长)
        return playerData.playerData.mainEntryGrow;
    

    if (id == 解锁技能组(仅后端传技能))
        return playerData.playerData.unlockSkillGroup;
    

    if (id == 是否为S)
        return playerData.playerData.sYn;


    //----------------------Write------------------------
    

    if (id == 装备Id)
    {
        playerData.playerData.id += value;
    } 

    

    if (id == 部位Id)
    {
        playerData.playerData.posId += value;
    } 

    

    if (id == 品质id)
    {
        playerData.playerData.quality += value;
    } 

    

    if (id == 主词条id)
    {
        playerData.playerData.mainEntryId += value;
    } 

    

    if (id == 主词条初始)
    {
        playerData.playerData.mainEntryInit += value;
    } 

    

    if (id == 每级成长)
    {
        playerData.playerData.mainEntryGrow += value;
    } 

    

    if (id == 解锁技能组(仅后端传技能))
    {
        playerData.playerData.unlockSkillGroup += value;
    } 

    

    if (id == 是否为S)
    {
        playerData.playerData.sYn += value;
    } 

        //----------------------参数面板------------------------
          
        

        parasItemsList0[0].SetInputTxt(playerData.playerData.id.ToString());
        

        parasItemsList0[1].SetInputTxt(playerData.playerData.posId.ToString());
        

        parasItemsList0[2].SetInputTxt(playerData.playerData.quality.ToString());
        

        parasItemsList0[3].SetInputTxt(playerData.playerData.mainEntryId.ToString());
        

        parasItemsList0[4].SetInputTxt(playerData.playerData.mainEntryInit.ToString());
        

        parasItemsList0[5].SetInputTxt(playerData.playerData.mainEntryGrow.ToString());
        

        parasItemsList0[6].SetInputTxt(playerData.playerData.unlockSkillGroup.ToString());
        

        parasItemsList0[7].SetInputTxt(playerData.playerData.sYn.ToString());
}
}