//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbmonopoly_shop
{


    
    /// <summary>
    /// 辅助主键id
    /// </summary>
    public int assist;


    
    /// <summary>
    /// ID
    /// </summary>
    public int id;


    
    /// <summary>
    /// 花费
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> cost;


    
    /// <summary>
    /// 奖励
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> reward;


    
    /// <summary>
    /// 兑换限制
    /// </summary>
    public int limit;


    
    /// <summary>
    /// 排序
    /// </summary>
    public int sort;


    //----------------------Read------------------------
    

    if (id == 辅助主键id)
        return playerData.playerData.assist;
    

    if (id == ID)
        return playerData.playerData.id;
    

    if (id == 花费)
        return playerData.playerData.cost;
    

    if (id == 奖励)
        return playerData.playerData.reward;
    

    if (id == 兑换限制)
        return playerData.playerData.limit;
    

    if (id == 排序)
        return playerData.playerData.sort;


    //----------------------Write------------------------
    

    if (id == 辅助主键id)
    {
        playerData.playerData.assist += value;
    } 

    

    if (id == ID)
    {
        playerData.playerData.id += value;
    } 

    

    if (id == 花费)
    {
        playerData.playerData.cost += value;
    } 

    

    if (id == 奖励)
    {
        playerData.playerData.reward += value;
    } 

    

    if (id == 兑换限制)
    {
        playerData.playerData.limit += value;
    } 

    

    if (id == 排序)
    {
        playerData.playerData.sort += value;
    } 

        //----------------------参数面板------------------------
          
        

        parasItemsList0[0].SetInputTxt(playerData.playerData.assist.ToString());
        

        parasItemsList0[1].SetInputTxt(playerData.playerData.id.ToString());
        

        parasItemsList0[2].SetInputTxt(playerData.playerData.cost.ToString());
        

        parasItemsList0[3].SetInputTxt(playerData.playerData.reward.ToString());
        

        parasItemsList0[4].SetInputTxt(playerData.playerData.limit.ToString());
        

        parasItemsList0[5].SetInputTxt(playerData.playerData.sort.ToString());
}
}