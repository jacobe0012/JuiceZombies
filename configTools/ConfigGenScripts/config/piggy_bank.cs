//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbpiggy_bank
{


    
    /// <summary>
    /// ID
    /// </summary>
    public int id;


    
    /// <summary>
    /// 类型
    /// </summary>
    public int type;


    
    /// <summary>
    /// 模块id
    /// </summary>
    public int tagFunc;


    
    /// <summary>
    /// 价格档位
    /// </summary>
    public int price;


    
    /// <summary>
    /// 初始钻石数
    /// </summary>
    public int base0;


    
    /// <summary>
    /// 钻石上限
    /// </summary>
    public int full;


    
    /// <summary>
    /// 每单位体力增加钻石数
    /// </summary>
    public int unit;


    
    /// <summary>
    /// 奖励
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> reward;


    
    /// <summary>
    /// 刷新权重
    /// </summary>
    public int power;


    
    /// <summary>
    /// 持续时间
    /// </summary>
    public int duration;


    
    /// <summary>
    /// 排序
    /// </summary>
    public int sort;


    //----------------------Read------------------------
    

    if (id == ID)
        return playerData.playerData.id;
    

    if (id == 类型)
        return playerData.playerData.type;
    

    if (id == 模块id)
        return playerData.playerData.tagFunc;
    

    if (id == 价格档位)
        return playerData.playerData.price;
    

    if (id == 初始钻石数)
        return playerData.playerData.base0;
    

    if (id == 钻石上限)
        return playerData.playerData.full;
    

    if (id == 每单位体力增加钻石数)
        return playerData.playerData.unit;
    

    if (id == 奖励)
        return playerData.playerData.reward;
    

    if (id == 刷新权重)
        return playerData.playerData.power;
    

    if (id == 持续时间)
        return playerData.playerData.duration;
    

    if (id == 排序)
        return playerData.playerData.sort;


    //----------------------Write------------------------
    

    if (id == ID)
    {
        playerData.playerData.id += value;
    } 

    

    if (id == 类型)
    {
        playerData.playerData.type += value;
    } 

    

    if (id == 模块id)
    {
        playerData.playerData.tagFunc += value;
    } 

    

    if (id == 价格档位)
    {
        playerData.playerData.price += value;
    } 

    

    if (id == 初始钻石数)
    {
        playerData.playerData.base0 += value;
    } 

    

    if (id == 钻石上限)
    {
        playerData.playerData.full += value;
    } 

    

    if (id == 每单位体力增加钻石数)
    {
        playerData.playerData.unit += value;
    } 

    

    if (id == 奖励)
    {
        playerData.playerData.reward += value;
    } 

    

    if (id == 刷新权重)
    {
        playerData.playerData.power += value;
    } 

    

    if (id == 持续时间)
    {
        playerData.playerData.duration += value;
    } 

    

    if (id == 排序)
    {
        playerData.playerData.sort += value;
    } 

        //----------------------参数面板------------------------
          
        

        parasItemsList0[0].SetInputTxt(playerData.playerData.id.ToString());
        

        parasItemsList0[1].SetInputTxt(playerData.playerData.type.ToString());
        

        parasItemsList0[2].SetInputTxt(playerData.playerData.tagFunc.ToString());
        

        parasItemsList0[3].SetInputTxt(playerData.playerData.price.ToString());
        

        parasItemsList0[4].SetInputTxt(playerData.playerData.base0.ToString());
        

        parasItemsList0[5].SetInputTxt(playerData.playerData.full.ToString());
        

        parasItemsList0[6].SetInputTxt(playerData.playerData.unit.ToString());
        

        parasItemsList0[7].SetInputTxt(playerData.playerData.reward.ToString());
        

        parasItemsList0[8].SetInputTxt(playerData.playerData.power.ToString());
        

        parasItemsList0[9].SetInputTxt(playerData.playerData.duration.ToString());
        

        parasItemsList0[10].SetInputTxt(playerData.playerData.sort.ToString());
}
}