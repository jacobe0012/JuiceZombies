//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbmonopoly_cell
{


    
    /// <summary>
    /// 格子id
    /// </summary>
    public int id;


    
    /// <summary>
    /// 分组
    /// </summary>
    public int group;


    
    /// <summary>
    /// 编号
    /// </summary>
    public int number;


    
    /// <summary>
    /// 步入权重
    /// </summary>
    public int power;


    
    /// <summary>
    /// 权重变化
    /// </summary>
    public int powerUp;


    
    /// <summary>
    /// 通向的下一个格子
    /// </summary>
    public int nextId;


    
    /// <summary>
    /// 大富翁事件
    /// </summary>
    public int monopolyEvent;


    
    /// <summary>
    /// 单元格停留奖励
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> reward;


    //----------------------Read------------------------
    

    if (id == 格子id)
        return playerData.playerData.id;
    

    if (id == 分组)
        return playerData.playerData.group;
    

    if (id == 编号)
        return playerData.playerData.number;
    

    if (id == 步入权重)
        return playerData.playerData.power;
    

    if (id == 权重变化)
        return playerData.playerData.powerUp;
    

    if (id == 通向的下一个格子)
        return playerData.playerData.nextId;
    

    if (id == 大富翁事件)
        return playerData.playerData.monopolyEvent;
    

    if (id == 单元格停留奖励)
        return playerData.playerData.reward;


    //----------------------Write------------------------
    

    if (id == 格子id)
    {
        playerData.playerData.id += value;
    } 

    

    if (id == 分组)
    {
        playerData.playerData.group += value;
    } 

    

    if (id == 编号)
    {
        playerData.playerData.number += value;
    } 

    

    if (id == 步入权重)
    {
        playerData.playerData.power += value;
    } 

    

    if (id == 权重变化)
    {
        playerData.playerData.powerUp += value;
    } 

    

    if (id == 通向的下一个格子)
    {
        playerData.playerData.nextId += value;
    } 

    

    if (id == 大富翁事件)
    {
        playerData.playerData.monopolyEvent += value;
    } 

    

    if (id == 单元格停留奖励)
    {
        playerData.playerData.reward += value;
    } 

        //----------------------参数面板------------------------
          
        

        parasItemsList0[0].SetInputTxt(playerData.playerData.id.ToString());
        

        parasItemsList0[1].SetInputTxt(playerData.playerData.group.ToString());
        

        parasItemsList0[2].SetInputTxt(playerData.playerData.number.ToString());
        

        parasItemsList0[3].SetInputTxt(playerData.playerData.power.ToString());
        

        parasItemsList0[4].SetInputTxt(playerData.playerData.powerUp.ToString());
        

        parasItemsList0[5].SetInputTxt(playerData.playerData.nextId.ToString());
        

        parasItemsList0[6].SetInputTxt(playerData.playerData.monopolyEvent.ToString());
        

        parasItemsList0[7].SetInputTxt(playerData.playerData.reward.ToString());
}
}