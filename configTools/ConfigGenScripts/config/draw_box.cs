//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbdraw_box
{


    
    /// <summary>
    /// 盲盒id
    /// </summary>
    public int id;


    
    /// <summary>
    /// 盲盒名称(GM)
    /// </summary>
    public string nameGm;


    
    /// <summary>
    /// 所属模块id
    /// </summary>
    public int tagFunc;


    
    /// <summary>
    /// 限制类型
    /// </summary>
    public int limitType;


    
    /// <summary>
    /// 限时时间(有效期)
    /// </summary>
    public int dateLimit;


    
    /// <summary>
    /// 限次次数
    /// </summary>
    public int timesLimit;


    
    /// <summary>
    /// 获得金币
    /// </summary>
    public int money;


    
    /// <summary>
    /// 掉落组
    /// </summary>
    public int dropId;


    
    /// <summary>
    /// 保底参数
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector2> guaranteePara;


    
    /// <summary>
    /// 保底掉落
    /// </summary>
    public System.Collections.Generic.List<int> guaranteeDrop;


    
    /// <summary>
    /// 逻辑类型
    /// </summary>
    public int drawType;


    
    /// <summary>
    /// 广告cd
    /// </summary>
    public int adCd;


    
    /// <summary>
    /// 抽奖物品id
    /// </summary>
    public int item;


    
    /// <summary>
    /// 单抽消耗钻石
    /// </summary>
    public int one;


    
    /// <summary>
    /// 十抽消耗钻石
    /// </summary>
    public int ten;


    //----------------------Read------------------------
    

    if (id == 盲盒id)
        return playerData.playerData.id;
    

    if (id == 盲盒名称(GM))
        return playerData.playerData.nameGm;
    

    if (id == 所属模块id)
        return playerData.playerData.tagFunc;
    

    if (id == 限制类型)
        return playerData.playerData.limitType;
    

    if (id == 限时时间(有效期))
        return playerData.playerData.dateLimit;
    

    if (id == 限次次数)
        return playerData.playerData.timesLimit;
    

    if (id == 获得金币)
        return playerData.playerData.money;
    

    if (id == 掉落组)
        return playerData.playerData.dropId;
    

    if (id == 保底参数)
        return playerData.playerData.guaranteePara;
    

    if (id == 保底掉落)
        return playerData.playerData.guaranteeDrop;
    

    if (id == 逻辑类型)
        return playerData.playerData.drawType;
    

    if (id == 广告cd)
        return playerData.playerData.adCd;
    

    if (id == 抽奖物品id)
        return playerData.playerData.item;
    

    if (id == 单抽消耗钻石)
        return playerData.playerData.one;
    

    if (id == 十抽消耗钻石)
        return playerData.playerData.ten;


    //----------------------Write------------------------
    

    if (id == 盲盒id)
    {
        playerData.playerData.id += value;
    } 

    

    if (id == 盲盒名称(GM))
    {
        playerData.playerData.nameGm += value;
    } 

    

    if (id == 所属模块id)
    {
        playerData.playerData.tagFunc += value;
    } 

    

    if (id == 限制类型)
    {
        playerData.playerData.limitType += value;
    } 

    

    if (id == 限时时间(有效期))
    {
        playerData.playerData.dateLimit += value;
    } 

    

    if (id == 限次次数)
    {
        playerData.playerData.timesLimit += value;
    } 

    

    if (id == 获得金币)
    {
        playerData.playerData.money += value;
    } 

    

    if (id == 掉落组)
    {
        playerData.playerData.dropId += value;
    } 

    

    if (id == 保底参数)
    {
        playerData.playerData.guaranteePara += value;
    } 

    

    if (id == 保底掉落)
    {
        playerData.playerData.guaranteeDrop += value;
    } 

    

    if (id == 逻辑类型)
    {
        playerData.playerData.drawType += value;
    } 

    

    if (id == 广告cd)
    {
        playerData.playerData.adCd += value;
    } 

    

    if (id == 抽奖物品id)
    {
        playerData.playerData.item += value;
    } 

    

    if (id == 单抽消耗钻石)
    {
        playerData.playerData.one += value;
    } 

    

    if (id == 十抽消耗钻石)
    {
        playerData.playerData.ten += value;
    } 

        //----------------------参数面板------------------------
          
        

        parasItemsList0[0].SetInputTxt(playerData.playerData.id.ToString());
        

        parasItemsList0[1].SetInputTxt(playerData.playerData.nameGm.ToString());
        

        parasItemsList0[2].SetInputTxt(playerData.playerData.tagFunc.ToString());
        

        parasItemsList0[3].SetInputTxt(playerData.playerData.limitType.ToString());
        

        parasItemsList0[4].SetInputTxt(playerData.playerData.dateLimit.ToString());
        

        parasItemsList0[5].SetInputTxt(playerData.playerData.timesLimit.ToString());
        

        parasItemsList0[6].SetInputTxt(playerData.playerData.money.ToString());
        

        parasItemsList0[7].SetInputTxt(playerData.playerData.dropId.ToString());
        

        parasItemsList0[8].SetInputTxt(playerData.playerData.guaranteePara.ToString());
        

        parasItemsList0[9].SetInputTxt(playerData.playerData.guaranteeDrop.ToString());
        

        parasItemsList0[10].SetInputTxt(playerData.playerData.drawType.ToString());
        

        parasItemsList0[11].SetInputTxt(playerData.playerData.adCd.ToString());
        

        parasItemsList0[12].SetInputTxt(playerData.playerData.item.ToString());
        

        parasItemsList0[13].SetInputTxt(playerData.playerData.one.ToString());
        

        parasItemsList0[14].SetInputTxt(playerData.playerData.ten.ToString());
}
}