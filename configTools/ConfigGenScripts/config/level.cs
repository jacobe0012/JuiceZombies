//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTblevel
{


    
    /// <summary>
    /// 关卡id
    /// </summary>
    public int id;


    
    /// <summary>
    /// 关卡类型
    /// </summary>
    public int type;


    
    /// <summary>
    /// 场景id
    /// </summary>
    public int sceneId;


    
    /// <summary>
    ///  击杀掉落串
    /// </summary>
    public System.Collections.Generic.List<int> rewardDrop;


    
    /// <summary>
    /// 生存掉落
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> rewardTime;


    
    /// <summary>
    /// 技能限制
    /// </summary>
    public System.Collections.Generic.List<int> skillGroupLimit;


    
    /// <summary>
    /// 复活次数
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector2> reviveNum;


    
    /// <summary>
    /// 通关条件
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> success;


    
    /// <summary>
    /// 失败条件
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> fail;


    
    /// <summary>
    /// 解锁条件
    /// </summary>
    public int unlock;


    //----------------------Read------------------------
    

    if (id == 关卡id)
        return playerData.playerData.id;
    

    if (id == 关卡类型)
        return playerData.playerData.type;
    

    if (id == 场景id)
        return playerData.playerData.sceneId;
    

    if (id ==  击杀掉落串)
        return playerData.playerData.rewardDrop;
    

    if (id == 生存掉落)
        return playerData.playerData.rewardTime;
    

    if (id == 技能限制)
        return playerData.playerData.skillGroupLimit;
    

    if (id == 复活次数)
        return playerData.playerData.reviveNum;
    

    if (id == 通关条件)
        return playerData.playerData.success;
    

    if (id == 失败条件)
        return playerData.playerData.fail;
    

    if (id == 解锁条件)
        return playerData.playerData.unlock;


    //----------------------Write------------------------
    

    if (id == 关卡id)
    {
        playerData.playerData.id += value;
    } 

    

    if (id == 关卡类型)
    {
        playerData.playerData.type += value;
    } 

    

    if (id == 场景id)
    {
        playerData.playerData.sceneId += value;
    } 

    

    if (id ==  击杀掉落串)
    {
        playerData.playerData.rewardDrop += value;
    } 

    

    if (id == 生存掉落)
    {
        playerData.playerData.rewardTime += value;
    } 

    

    if (id == 技能限制)
    {
        playerData.playerData.skillGroupLimit += value;
    } 

    

    if (id == 复活次数)
    {
        playerData.playerData.reviveNum += value;
    } 

    

    if (id == 通关条件)
    {
        playerData.playerData.success += value;
    } 

    

    if (id == 失败条件)
    {
        playerData.playerData.fail += value;
    } 

    

    if (id == 解锁条件)
    {
        playerData.playerData.unlock += value;
    } 

        //----------------------参数面板------------------------
          
        

        parasItemsList0[0].SetInputTxt(playerData.playerData.id.ToString());
        

        parasItemsList0[1].SetInputTxt(playerData.playerData.type.ToString());
        

        parasItemsList0[2].SetInputTxt(playerData.playerData.sceneId.ToString());
        

        parasItemsList0[3].SetInputTxt(playerData.playerData.rewardDrop.ToString());
        

        parasItemsList0[4].SetInputTxt(playerData.playerData.rewardTime.ToString());
        

        parasItemsList0[5].SetInputTxt(playerData.playerData.skillGroupLimit.ToString());
        

        parasItemsList0[6].SetInputTxt(playerData.playerData.reviveNum.ToString());
        

        parasItemsList0[7].SetInputTxt(playerData.playerData.success.ToString());
        

        parasItemsList0[8].SetInputTxt(playerData.playerData.fail.ToString());
        

        parasItemsList0[9].SetInputTxt(playerData.playerData.unlock.ToString());
}
}