功能描述：任务触发以及更新状态
代码逻辑梳理：
特殊任务类型实现：
3046全身装备达到{0}与3045全身装备等级达到{0}级：
				 第一步：取出缓存（缓存已经在gm填充了新的最新的数据实现只是更新了新增的task的缓存修改以前的对应task缓存变更)
				 第二步：查询用户任务（玩家db存储数据因登录行动导致任务激活，把最新缓存更新进对应玩家的数据库）
				 第三步：处理redis数据（task: +用玩家userId + type 作为key 存储一个6容量的数组 在redis中 的数组的下标对应武器部位id -1），
				 当进来的对应部位的参数小于对应下标的数字，更新redis数组中的数据
				 第四步：更新用户任务 
							1.redis存储数组中最小的值
							2.获取当前时间
							3.遍历当前玩家一种类型的任务（检测每一个任务para 的规范性）
								1.1.检查活动开启：跳过非活动任务，跳过一次性任务，跳过永久开启活动，检测解锁，检测时间）
								1.2.获取对应任务id缓存数据
								1.3.如果参数与缓存数据一致任务完成（设置积分，更新时间，更新次数，记录完成多少次）
				 第五步：如果记录的数字大于1发送广播
3043单件装备达到{}级
				第一步：同上
				第二步：同上
				第三步：更新用户任务 
						1.遍历当前玩家一种类型的任务（检测每一个任务para 的规范性）
							1.1.检查活动开启：跳过非活动任务，跳过一次性任务，跳过永久开启活动，检测解锁，检测时间）
							1.2.获取对应任务id缓存数据
							1.3.如果进来的数据>= 缓存第一个参数 任务完成（设置积分，更新时间，更新次数，记录完成多少次）
				第四步：如果记录的数字大于1发送广播
3044 未埋点（需要确认）
3051获得{}品质的装备的{}件
				第一步：同上
				第二步：同上
				第三步：更新用户任务 
						1.遍历当前玩家一种类型的任务（检测每一个任务para 的规范性）
							1.1.同上
							1.2.同上
							1.3.进来的参数第二个== 缓存第二个 （进来的参数第一个 + db的原记录） 进来的参数第一个>= 缓存第一个 任务完成
				第四步：同上			
3061首次获得{}品质装备成就
                第一步：同上
				第二步：同上
				第三步：更新用户任务 
						1.遍历当前玩家一种类型的任务（检测每一个任务para 的规范性）
							1.1.同上
							1.2.同上
							1.3.进来的参数第二个== 缓存第二个 并且 db中的para 参数不为0 任务完成
				第四步：同上
2025参与关卡{}{}次, 2015通关{}{}次
				第一步：同上
				第二步：同上
				第三步：更新用户任务 
						1.遍历当前玩家一种类型的任务（检测每一个任务para 的规范性）
							1.1.同上
							1.2.同上
							1.3.直接给db中的para + 进来的第一个参数， 进来的参数第二个== 缓存第二个 并且 db中的para 参数 >= 缓存第一个参数 任务完成
				第四步：同上
通用任务处理逻辑（参数数量1，且都为累加）：
				第一步：取出缓存（缓存已经在gm填充了新的最新的数据实现只是更新了新增的task的缓存修改以前的对应task缓存变更)
				第二步：查询用户任务（玩家db存储数据因登录行动导致任务激活，把最新缓存更新进对应玩家的数据库）
				第三步：检查任务参数（此处任务参数只有一个）
				第四步：遍历当前玩家一种类型的任务
				根据任务tag处理
						日常任务：
								1.检查日期是否变化
								2.变化重置日常
								3.累加参数，累加后>=缓存参数 任务完成					
						周常任务：
								1.检查日期是否变化
								2.变化重置日常
								3.累加参数，累加后>=缓存参数 任务完成
						成就任务：
								1.累加参数，累加后>=缓存参数 任务完成
						其他任务：
								1.累加参数，累加后>=缓存参数 任务完成
				第五步：根据返回值boolean 直接添加任务更新列表		
				第六步：批量更新任务		