//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbmonster_template
{
    public static void Create(int i,ref BlobBuilder builder,ref BlobBuilderArray<ConfigTbmonster_template> configTbmonster_templates,Tables tables)
    { 
        configTbmonster_templates[i].assist = tables.Tbmonster_template.DataList[i].assist;
        configTbmonster_templates[i].id = tables.Tbmonster_template.DataList[i].id;
        configTbmonster_templates[i].ruleId = tables.Tbmonster_template.DataList[i].ruleId;
        configTbmonster_templates[i].type = tables.Tbmonster_template.DataList[i].type;
        var allocatetimes =
        builder.Allocate(ref configTbmonster_templates[i].time,
        tables.Tbmonster_template.DataList[i].time.Count);
        for (var times = 0; times < tables.Tbmonster_template.DataList[i].time.Count; times++)
        {
            allocatetimes[times] = tables.Tbmonster_template.DataList[i].time[times];
        }
        configTbmonster_templates[i].paraPos = tables.Tbmonster_template.DataList[i].paraPos;
        configTbmonster_templates[i].atk = tables.Tbmonster_template.DataList[i].atk;
        configTbmonster_templates[i].hp = tables.Tbmonster_template.DataList[i].hp;
        configTbmonster_templates[i].num = tables.Tbmonster_template.DataList[i].num;
        configTbmonster_templates[i].limitMax = tables.Tbmonster_template.DataList[i].limitMax;
        configTbmonster_templates[i].interval = tables.Tbmonster_template.DataList[i].interval;
        configTbmonster_templates[i].distance = tables.Tbmonster_template.DataList[i].distance;
        configTbmonster_templates[i].monsterFormationId = tables.Tbmonster_template.DataList[i].monsterFormationId;
        var allocaterewards =
        builder.Allocate(ref configTbmonster_templates[i].reward,
        tables.Tbmonster_template.DataList[i].reward.Count);
        for (var rewards = 0; rewards < tables.Tbmonster_template.DataList[i].reward.Count; rewards++)
        {
            allocaterewards[rewards] = (int2) math.round(tables.Tbmonster_template.DataList[i].reward[rewards]);
        }
        var allocateevent0s =
        builder.Allocate(ref configTbmonster_templates[i].event0,
        tables.Tbmonster_template.DataList[i].event0.Count);
        for (var event0s = 0; event0s < tables.Tbmonster_template.DataList[i].event0.Count; event0s++)
        {
            allocateevent0s[event0s] = tables.Tbmonster_template.DataList[i].event0[event0s];
        }
        configTbmonster_templates[i].monsterId = tables.Tbmonster_template.DataList[i].monsterId;
    }


    /// <summary>
    /// 辅助主键id
    /// </summary>
    public int assist;
    /// <summary>
    /// 模版id
    /// </summary>
    public int id;
    /// <summary>
    /// 组规则id
    /// </summary>
    public int ruleId;
    /// <summary>
    /// 刷新类型
    /// </summary>
    public int type;
    /// <summary>
    /// 刷新时间
    /// </summary>
    public BlobArray<int> time;    
    /// <summary>
    /// 元素位置
    /// </summary>
    public int paraPos;
    /// <summary>
    /// 攻击力
    /// </summary>
    public int atk;
    /// <summary>
    /// 生命值
    /// </summary>
    public int hp;
    /// <summary>
    /// 单次数量
    /// </summary>
    public int num;
    /// <summary>
    /// 组最大数量限制
    /// </summary>
    public int limitMax;
    /// <summary>
    /// 刷新间隔
    /// </summary>
    public int interval;
    /// <summary>
    /// 刷新距离
    /// </summary>
    public int distance;
    /// <summary>
    /// 阵型id
    /// </summary>
    public int monsterFormationId;
    /// <summary>
    /// 掉落组
    /// </summary>
    public BlobArray<int2> reward;  
    /// <summary>
    /// 地图事件
    /// </summary>
    public BlobArray<int> event0;    
    /// <summary>
    /// 怪物id
    /// </summary>
    public int monsterId;
}
}