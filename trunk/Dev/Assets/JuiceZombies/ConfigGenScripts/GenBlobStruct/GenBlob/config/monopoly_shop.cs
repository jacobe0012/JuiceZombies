//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbmonopoly_shop
{
    public static void Create(int i,ref BlobBuilder builder,ref BlobBuilderArray<ConfigTbmonopoly_shop> configTbmonopoly_shops,Tables tables)
    { 
        configTbmonopoly_shops[i].assist = tables.Tbmonopoly_shop.DataList[i].assist;
        configTbmonopoly_shops[i].id = tables.Tbmonopoly_shop.DataList[i].id;
        configTbmonopoly_shops[i].costNum = tables.Tbmonopoly_shop.DataList[i].costNum;
        var allocaterewards =
        builder.Allocate(ref configTbmonopoly_shops[i].reward,
        tables.Tbmonopoly_shop.DataList[i].reward.Count);
        for (var rewards = 0; rewards < tables.Tbmonopoly_shop.DataList[i].reward.Count; rewards++)
        {
            allocaterewards[rewards] = (int3) math.round(tables.Tbmonopoly_shop.DataList[i].reward[rewards]);
        }
        configTbmonopoly_shops[i].limit = tables.Tbmonopoly_shop.DataList[i].limit;
        configTbmonopoly_shops[i].sort = tables.Tbmonopoly_shop.DataList[i].sort;
    }


    /// <summary>
    /// 辅助主键id
    /// </summary>
    public int assist;
    /// <summary>
    /// ID
    /// </summary>
    public int id;
    /// <summary>
    /// 兑换代币消耗
    /// </summary>
    public int costNum;
    /// <summary>
    /// 奖励
    /// </summary>
    public BlobArray<int3> reward;  
    /// <summary>
    /// 兑换限制
    /// </summary>
    public int limit;
    /// <summary>
    /// 排序
    /// </summary>
    public int sort;
}
}