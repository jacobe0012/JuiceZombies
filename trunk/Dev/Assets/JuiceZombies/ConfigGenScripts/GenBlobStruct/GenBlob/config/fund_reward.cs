//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbfund_reward
{
    public static void Create(int i,ref BlobBuilder builder,ref BlobBuilderArray<ConfigTbfund_reward> configTbfund_rewards,Tables tables)
    { 
        configTbfund_rewards[i].assist = tables.Tbfund_reward.DataList[i].assist;
        configTbfund_rewards[i].id = tables.Tbfund_reward.DataList[i].id;
        configTbfund_rewards[i].level = tables.Tbfund_reward.DataList[i].level;
        var allocatereward1s =
        builder.Allocate(ref configTbfund_rewards[i].reward1,
        tables.Tbfund_reward.DataList[i].reward1.Count);
        for (var reward1s = 0; reward1s < tables.Tbfund_reward.DataList[i].reward1.Count; reward1s++)
        {
            allocatereward1s[reward1s] = (int3) math.round(tables.Tbfund_reward.DataList[i].reward1[reward1s]);
        }
        var allocatereward2s =
        builder.Allocate(ref configTbfund_rewards[i].reward2,
        tables.Tbfund_reward.DataList[i].reward2.Count);
        for (var reward2s = 0; reward2s < tables.Tbfund_reward.DataList[i].reward2.Count; reward2s++)
        {
            allocatereward2s[reward2s] = (int3) math.round(tables.Tbfund_reward.DataList[i].reward2[reward2s]);
        }
        var allocatereward3s =
        builder.Allocate(ref configTbfund_rewards[i].reward3,
        tables.Tbfund_reward.DataList[i].reward3.Count);
        for (var reward3s = 0; reward3s < tables.Tbfund_reward.DataList[i].reward3.Count; reward3s++)
        {
            allocatereward3s[reward3s] = (int3) math.round(tables.Tbfund_reward.DataList[i].reward3[reward3s]);
        }
    }


    /// <summary>
    /// 辅助主键id
    /// </summary>
    public int assist;
    /// <summary>
    /// 成长基金ID
    /// </summary>
    public int id;
    /// <summary>
    /// 玩家等级
    /// </summary>
    public int level;
    /// <summary>
    /// 免费线
    /// </summary>
    public BlobArray<int3> reward1;  
    /// <summary>
    /// 付费线1
    /// </summary>
    public BlobArray<int3> reward2;  
    /// <summary>
    /// 付费线2
    /// </summary>
    public BlobArray<int3> reward3;  
}
}