//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbequip_level
{
    public static void Create(int i,ref BlobBuilder builder,ref BlobBuilderArray<ConfigTbequip_level> configTbequip_levels,Tables tables)
    { 
        configTbequip_levels[i].id = tables.Tbequip_level.DataList[i].id;
        var allocatecost1s =
        builder.Allocate(ref configTbequip_levels[i].cost1,
        tables.Tbequip_level.DataList[i].cost1.Count);
        for (var cost1s = 0; cost1s < tables.Tbequip_level.DataList[i].cost1.Count; cost1s++)
        {
            allocatecost1s[cost1s] = (int3) math.round(tables.Tbequip_level.DataList[i].cost1[cost1s]);
        }
        var allocatecost2s =
        builder.Allocate(ref configTbequip_levels[i].cost2,
        tables.Tbequip_level.DataList[i].cost2.Count);
        for (var cost2s = 0; cost2s < tables.Tbequip_level.DataList[i].cost2.Count; cost2s++)
        {
            allocatecost2s[cost2s] = (int3) math.round(tables.Tbequip_level.DataList[i].cost2[cost2s]);
        }
        var allocatecost3s =
        builder.Allocate(ref configTbequip_levels[i].cost3,
        tables.Tbequip_level.DataList[i].cost3.Count);
        for (var cost3s = 0; cost3s < tables.Tbequip_level.DataList[i].cost3.Count; cost3s++)
        {
            allocatecost3s[cost3s] = (int3) math.round(tables.Tbequip_level.DataList[i].cost3[cost3s]);
        }
        var allocatecost4s =
        builder.Allocate(ref configTbequip_levels[i].cost4,
        tables.Tbequip_level.DataList[i].cost4.Count);
        for (var cost4s = 0; cost4s < tables.Tbequip_level.DataList[i].cost4.Count; cost4s++)
        {
            allocatecost4s[cost4s] = (int3) math.round(tables.Tbequip_level.DataList[i].cost4[cost4s]);
        }
        var allocatecost5s =
        builder.Allocate(ref configTbequip_levels[i].cost5,
        tables.Tbequip_level.DataList[i].cost5.Count);
        for (var cost5s = 0; cost5s < tables.Tbequip_level.DataList[i].cost5.Count; cost5s++)
        {
            allocatecost5s[cost5s] = (int3) math.round(tables.Tbequip_level.DataList[i].cost5[cost5s]);
        }
        var allocatecost6s =
        builder.Allocate(ref configTbequip_levels[i].cost6,
        tables.Tbequip_level.DataList[i].cost6.Count);
        for (var cost6s = 0; cost6s < tables.Tbequip_level.DataList[i].cost6.Count; cost6s++)
        {
            allocatecost6s[cost6s] = (int3) math.round(tables.Tbequip_level.DataList[i].cost6[cost6s]);
        }
    }


    /// <summary>
    /// 等级Id
    /// </summary>
    public int id;
    /// <summary>
    /// 武器消耗
    /// </summary>
    public BlobArray<int3> cost1;  
    /// <summary>
    /// 衣服消耗
    /// </summary>
    public BlobArray<int3> cost2;  
    /// <summary>
    /// 手套消耗
    /// </summary>
    public BlobArray<int3> cost3;  
    /// <summary>
    /// 裤子消耗
    /// </summary>
    public BlobArray<int3> cost4;  
    /// <summary>
    /// 腰带消耗
    /// </summary>
    public BlobArray<int3> cost5;  
    /// <summary>
    /// 鞋子消耗
    /// </summary>
    public BlobArray<int3> cost6;  
}
}