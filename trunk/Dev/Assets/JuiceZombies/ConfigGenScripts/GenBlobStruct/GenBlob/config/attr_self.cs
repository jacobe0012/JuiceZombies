//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbattr_self
{
    public static void Create(int i,ref BlobBuilder builder,ref BlobBuilderArray<ConfigTbattr_self> configTbattr_selfs,Tables tables)
    { 
        configTbattr_selfs[i].level = tables.Tbattr_self.DataList[i].level;
        configTbattr_selfs[i].exp = tables.Tbattr_self.DataList[i].exp;
        configTbattr_selfs[i].expRatios = tables.Tbattr_self.DataList[i].expRatios;
        configTbattr_selfs[i].gold = tables.Tbattr_self.DataList[i].gold;
        configTbattr_selfs[i].goldRatios = tables.Tbattr_self.DataList[i].goldRatios;
        configTbattr_selfs[i].paper = tables.Tbattr_self.DataList[i].paper;
        configTbattr_selfs[i].paperRatios = tables.Tbattr_self.DataList[i].paperRatios;
        configTbattr_selfs[i].equip = tables.Tbattr_self.DataList[i].equip;
        configTbattr_selfs[i].equipRatios = tables.Tbattr_self.DataList[i].equipRatios;
        configTbattr_selfs[i].pickUpRadiusRatios = tables.Tbattr_self.DataList[i].pickUpRadiusRatios;
        configTbattr_selfs[i].killEnemy = tables.Tbattr_self.DataList[i].killEnemy;
        configTbattr_selfs[i].maxHp = tables.Tbattr_self.DataList[i].maxHp;
        configTbattr_selfs[i].defaultMaxHp = tables.Tbattr_self.DataList[i].defaultMaxHp;
        configTbattr_selfs[i].hpRatios = tables.Tbattr_self.DataList[i].hpRatios;
        configTbattr_selfs[i].hpAdd = tables.Tbattr_self.DataList[i].hpAdd;
        configTbattr_selfs[i].curHpRatios = tables.Tbattr_self.DataList[i].curHpRatios;
        configTbattr_selfs[i].hpRecovery = tables.Tbattr_self.DataList[i].hpRecovery;
        configTbattr_selfs[i].defaultHpRecovery = tables.Tbattr_self.DataList[i].defaultHpRecovery;
        configTbattr_selfs[i].hpRecoveryRatios = tables.Tbattr_self.DataList[i].hpRecoveryRatios;
        configTbattr_selfs[i].hpRecoveryAdd = tables.Tbattr_self.DataList[i].hpRecoveryAdd;
        configTbattr_selfs[i].propsRecoveryRatios = tables.Tbattr_self.DataList[i].propsRecoveryRatios;
        configTbattr_selfs[i].propsRecoveryAdd = tables.Tbattr_self.DataList[i].propsRecoveryAdd;
        configTbattr_selfs[i].atk = tables.Tbattr_self.DataList[i].atk;
        configTbattr_selfs[i].defaultAtk = tables.Tbattr_self.DataList[i].defaultAtk;
        configTbattr_selfs[i].atkRatios = tables.Tbattr_self.DataList[i].atkRatios;
        configTbattr_selfs[i].atkAdd = tables.Tbattr_self.DataList[i].atkAdd;
        configTbattr_selfs[i].rebirthCount = tables.Tbattr_self.DataList[i].rebirthCount;
        configTbattr_selfs[i].rebirthCount1 = tables.Tbattr_self.DataList[i].rebirthCount1;
        configTbattr_selfs[i].critical = tables.Tbattr_self.DataList[i].critical;
        configTbattr_selfs[i].tmpCritical = tables.Tbattr_self.DataList[i].tmpCritical;
        configTbattr_selfs[i].criticalDamageRatios = tables.Tbattr_self.DataList[i].criticalDamageRatios;
        configTbattr_selfs[i].damageRatios = tables.Tbattr_self.DataList[i].damageRatios;
        configTbattr_selfs[i].damageAdd = tables.Tbattr_self.DataList[i].damageAdd;
        configTbattr_selfs[i].reduceHurtRatios = tables.Tbattr_self.DataList[i].reduceHurtRatios;
        configTbattr_selfs[i].reduceHurtAdd = tables.Tbattr_self.DataList[i].reduceHurtAdd;
        configTbattr_selfs[i].reduceBulletRatios = tables.Tbattr_self.DataList[i].reduceBulletRatios;
        configTbattr_selfs[i].changedFromPlayerDamage = tables.Tbattr_self.DataList[i].changedFromPlayerDamage;
        configTbattr_selfs[i].maxMoveSpeed = tables.Tbattr_self.DataList[i].maxMoveSpeed;
        configTbattr_selfs[i].defaultMaxMoveSpeed = tables.Tbattr_self.DataList[i].defaultMaxMoveSpeed;
        configTbattr_selfs[i].maxMoveSpeedRatios = tables.Tbattr_self.DataList[i].maxMoveSpeedRatios;
        configTbattr_selfs[i].maxMoveSpeedAdd = tables.Tbattr_self.DataList[i].maxMoveSpeedAdd;
        configTbattr_selfs[i].speedRecoveryTime = tables.Tbattr_self.DataList[i].speedRecoveryTime;
        configTbattr_selfs[i].mass = tables.Tbattr_self.DataList[i].mass;
        configTbattr_selfs[i].defaultMass = tables.Tbattr_self.DataList[i].defaultMass;
        configTbattr_selfs[i].massRatios = tables.Tbattr_self.DataList[i].massRatios;
        configTbattr_selfs[i].pushForce = tables.Tbattr_self.DataList[i].pushForce;
        configTbattr_selfs[i].defaultPushForce = tables.Tbattr_self.DataList[i].defaultPushForce;
        configTbattr_selfs[i].pushForceRatios = tables.Tbattr_self.DataList[i].pushForceRatios;
        configTbattr_selfs[i].pushForceAdd = tables.Tbattr_self.DataList[i].pushForceAdd;
        configTbattr_selfs[i].reduceHitBackRatios = tables.Tbattr_self.DataList[i].reduceHitBackRatios;
        configTbattr_selfs[i].dodge = tables.Tbattr_self.DataList[i].dodge;
        configTbattr_selfs[i].shieldCount = tables.Tbattr_self.DataList[i].shieldCount;
        configTbattr_selfs[i].defaultCoolDown = tables.Tbattr_self.DataList[i].defaultCoolDown;
        configTbattr_selfs[i].skillFreeBuyCount = tables.Tbattr_self.DataList[i].skillFreeBuyCount;
        configTbattr_selfs[i].buySkillRatios = tables.Tbattr_self.DataList[i].buySkillRatios;
        configTbattr_selfs[i].refreshShopRatios = tables.Tbattr_self.DataList[i].refreshShopRatios;
        configTbattr_selfs[i].skillRefreshCount = tables.Tbattr_self.DataList[i].skillRefreshCount;
        configTbattr_selfs[i].skillWeightIncrease1 = tables.Tbattr_self.DataList[i].skillWeightIncrease1;
        configTbattr_selfs[i].skillWeightIncrease2 = tables.Tbattr_self.DataList[i].skillWeightIncrease2;
        configTbattr_selfs[i].skillWeightIncrease3 = tables.Tbattr_self.DataList[i].skillWeightIncrease3;
        configTbattr_selfs[i].skillTempRefreshCount = tables.Tbattr_self.DataList[i].skillTempRefreshCount;
        configTbattr_selfs[i].defaultBulletRangeRatios = tables.Tbattr_self.DataList[i].defaultBulletRangeRatios;
        configTbattr_selfs[i].collideDamageRatios = tables.Tbattr_self.DataList[i].collideDamageRatios;
        configTbattr_selfs[i].continuousCollideDamageRatios = tables.Tbattr_self.DataList[i].continuousCollideDamageRatios;
        configTbattr_selfs[i].superPushForceChance = tables.Tbattr_self.DataList[i].superPushForceChance;
        configTbattr_selfs[i].maxPushForceChance = tables.Tbattr_self.DataList[i].maxPushForceChance;
        configTbattr_selfs[i].normalMonsterDamageRatios = tables.Tbattr_self.DataList[i].normalMonsterDamageRatios;
        configTbattr_selfs[i].specialMonsterDamageRatios = tables.Tbattr_self.DataList[i].specialMonsterDamageRatios;
        configTbattr_selfs[i].bossMonsterDamageRatios = tables.Tbattr_self.DataList[i].bossMonsterDamageRatios;
        configTbattr_selfs[i].weaponSkillExtraCount = tables.Tbattr_self.DataList[i].weaponSkillExtraCount;
        configTbattr_selfs[i].scaleRatios = tables.Tbattr_self.DataList[i].scaleRatios;
    }


    /// <summary>
    /// 201100_等级_类型:1_是否玩家独有:1
    /// </summary>
    public int level;
    /// <summary>
    /// 201200_经验_类型:1_是否玩家独有:1
    /// </summary>
    public int exp;
    /// <summary>
    /// 201220_经验获取加成_类型:2_是否玩家独有:1
    /// </summary>
    public int expRatios;
    /// <summary>
    /// 201300_金币_类型:1_是否玩家独有:1
    /// </summary>
    public int gold;
    /// <summary>
    /// 201320_金币拾取加成_类型:2_是否玩家独有:1
    /// </summary>
    public int goldRatios;
    /// <summary>
    /// 201400_图纸_类型:1_是否玩家独有:1
    /// </summary>
    public int paper;
    /// <summary>
    /// 201420_图纸掉率加成_类型:2_是否玩家独有:1
    /// </summary>
    public int paperRatios;
    /// <summary>
    /// 201500_装备_类型:1_是否玩家独有:1
    /// </summary>
    public int equip;
    /// <summary>
    /// 201520_装备掉率加成_类型:2_是否玩家独有:1
    /// </summary>
    public int equipRatios;
    /// <summary>
    /// 201600_拾取范围加成_类型:2_是否玩家独有:1
    /// </summary>
    public int pickUpRadiusRatios;
    /// <summary>
    /// 201700_杀敌数_类型:1_是否玩家独有:1
    /// </summary>
    public int killEnemy;
    /// <summary>
    /// 202000_生命值_类型:1_是否玩家独有:0
    /// </summary>
    public int maxHp;
    /// <summary>
    /// 202010_局外生命值_类型:1_是否玩家独有:0
    /// </summary>
    public int defaultMaxHp;
    /// <summary>
    /// 202020_生命值加成_类型:2_是否玩家独有:0
    /// </summary>
    public int hpRatios;
    /// <summary>
    /// 202030_生命值固定加成_类型:1_是否玩家独有:0
    /// </summary>
    public int hpAdd;
    /// <summary>
    /// 202040_当前生命万分比_类型:2_是否玩家独有:0
    /// </summary>
    public int curHpRatios;
    /// <summary>
    /// 202100_生命恢复_类型:1_是否玩家独有:0
    /// </summary>
    public int hpRecovery;
    /// <summary>
    /// 202110_局外生命恢复_类型:1_是否玩家独有:0
    /// </summary>
    public int defaultHpRecovery;
    /// <summary>
    /// 202120_生命恢复加成_类型:2_是否玩家独有:0
    /// </summary>
    public int hpRecoveryRatios;
    /// <summary>
    /// 202130_生命恢复固定加成_类型:1_是否玩家独有:0
    /// </summary>
    public int hpRecoveryAdd;
    /// <summary>
    /// 202140_道具恢复加成_类型:2_是否玩家独有:1
    /// </summary>
    public int propsRecoveryRatios;
    /// <summary>
    /// 202150_道具恢复固定加成_类型:1_是否玩家独有:1
    /// </summary>
    public int propsRecoveryAdd;
    /// <summary>
    /// 203000_攻击力_类型:1_是否玩家独有:0
    /// </summary>
    public int atk;
    /// <summary>
    /// 203010_局外攻击力_类型:1_是否玩家独有:0
    /// </summary>
    public int defaultAtk;
    /// <summary>
    /// 203020_攻击力加成_类型:2_是否玩家独有:0
    /// </summary>
    public int atkRatios;
    /// <summary>
    /// 203030_攻击力固定加成_类型:1_是否玩家独有:0
    /// </summary>
    public int atkAdd;
    /// <summary>
    /// 204000_复活次数_类型:1_是否玩家独有:0
    /// </summary>
    public int rebirthCount;
    /// <summary>
    /// 204010_复活次数小恶魔_类型:1_是否玩家独有:0
    /// </summary>
    public int rebirthCount1;
    /// <summary>
    /// 205000_暴击率_类型:2_是否玩家独有:0
    /// </summary>
    public int critical;
    /// <summary>
    /// 205010_临时暴击率_类型:2_是否玩家独有:0
    /// </summary>
    public int tmpCritical;
    /// <summary>
    /// 205100_暴击伤害率_类型:2_是否玩家独有:0
    /// </summary>
    public int criticalDamageRatios;
    /// <summary>
    /// 206120_伤害加成_类型:2_是否玩家独有:0
    /// </summary>
    public int damageRatios;
    /// <summary>
    /// 206130_伤害固定加成_类型:1_是否玩家独有:0
    /// </summary>
    public int damageAdd;
    /// <summary>
    /// 206220_伤害减免_类型:2_是否玩家独有:0
    /// </summary>
    public int reduceHurtRatios;
    /// <summary>
    /// 206230_伤害固定减免_类型:1_是否玩家独有:0
    /// </summary>
    public int reduceHurtAdd;
    /// <summary>
    /// 206240_弹幕伤害减免_类型:2_是否玩家独有:0
    /// </summary>
    public int reduceBulletRatios;
    /// <summary>
    /// 206250_受到玩家伤害变更_类型:2_是否玩家独有:0
    /// </summary>
    public int changedFromPlayerDamage;
    /// <summary>
    /// 207000_移动速度_类型:1_是否玩家独有:0
    /// </summary>
    public int maxMoveSpeed;
    /// <summary>
    /// 207010_局外移动速度_类型:1_是否玩家独有:0
    /// </summary>
    public int defaultMaxMoveSpeed;
    /// <summary>
    /// 207020_移动速度加成_类型:2_是否玩家独有:0
    /// </summary>
    public int maxMoveSpeedRatios;
    /// <summary>
    /// 207030_移动速度固定加成_类型:_是否玩家独有:0
    /// </summary>
    public int maxMoveSpeedAdd;
    /// <summary>
    /// 207100_速度恢复时间(0到最大)_类型:1_是否玩家独有:0
    /// </summary>
    public int speedRecoveryTime;
    /// <summary>
    /// 208000_角色质量_类型:1_是否玩家独有:0
    /// </summary>
    public int mass;
    /// <summary>
    /// 208010_局外角色质量_类型:1_是否玩家独有:0
    /// </summary>
    public int defaultMass;
    /// <summary>
    /// 208020_质量加成_类型:2_是否玩家独有:0
    /// </summary>
    public int massRatios;
    /// <summary>
    /// 209000_角色推力_类型:1_是否玩家独有:0
    /// </summary>
    public int pushForce;
    /// <summary>
    /// 209010_局外角色推力_类型:1_是否玩家独有:0
    /// </summary>
    public int defaultPushForce;
    /// <summary>
    /// 209020_推力加成_类型:2_是否玩家独有:0
    /// </summary>
    public int pushForceRatios;
    /// <summary>
    /// 209030_推力固定加成_类型:_是否玩家独有:0
    /// </summary>
    public int pushForceAdd;
    /// <summary>
    /// 210000_击退减免_类型:2_是否玩家独有:0
    /// </summary>
    public int reduceHitBackRatios;
    /// <summary>
    /// 211000_闪避率_类型:2_是否玩家独有:0
    /// </summary>
    public int dodge;
    /// <summary>
    /// 212000_抵挡层数_类型:1_是否玩家独有:0
    /// </summary>
    public int shieldCount;
    /// <summary>
    /// 213000_局外技能冷却减免_类型:2_是否玩家独有:0
    /// </summary>
    public int defaultCoolDown;
    /// <summary>
    /// 214000_技能免费购买次数_类型:1_是否玩家独有:1
    /// </summary>
    public int skillFreeBuyCount;
    /// <summary>
    /// 214100_技能购买价格万分比_类型:2_是否玩家独有:1
    /// </summary>
    public int buySkillRatios;
    /// <summary>
    /// 214200_刷新商店价格万分比_类型:2_是否玩家独有:1
    /// </summary>
    public int refreshShopRatios;
    /// <summary>
    /// 214300_技能商店免费刷新次数_类型:1_是否玩家独有:1
    /// </summary>
    public int skillRefreshCount;
    /// <summary>
    /// 214400_蓝色技能权重提升万分比_类型:2_是否玩家独有:1
    /// </summary>
    public int skillWeightIncrease1;
    /// <summary>
    /// 214500_紫色技能权重提升万分比_类型:2_是否玩家独有:1
    /// </summary>
    public int skillWeightIncrease2;
    /// <summary>
    /// 214600_金色技能权重提升万分比_类型:2_是否玩家独有:1
    /// </summary>
    public int skillWeightIncrease3;
    /// <summary>
    /// 214700_临时免费刷新次数_类型:1_是否玩家独有:1
    /// </summary>
    public int skillTempRefreshCount;
    /// <summary>
    /// 215000_局外弹幕范围加成_类型:2_是否玩家独有:0
    /// </summary>
    public int defaultBulletRangeRatios;
    /// <summary>
    /// 218100_撞击伤害加成_类型:2_是否玩家独有:0
    /// </summary>
    public int collideDamageRatios;
    /// <summary>
    /// 218200_连续撞击伤害加成_类型:2_是否玩家独有:0
    /// </summary>
    public int continuousCollideDamageRatios;
    /// <summary>
    /// 219100_超级推力概率_类型:2_是否玩家独有:1
    /// </summary>
    public int superPushForceChance;
    /// <summary>
    /// 219200_极限推力概率_类型:2_是否玩家独有:1
    /// </summary>
    public int maxPushForceChance;
    /// <summary>
    /// 220100_对普通怪物伤害加成_类型:2_是否玩家独有:1
    /// </summary>
    public int normalMonsterDamageRatios;
    /// <summary>
    /// 220200_对稀有怪物伤害加成_类型:2_是否玩家独有:1
    /// </summary>
    public int specialMonsterDamageRatios;
    /// <summary>
    /// 220300_对boss伤害加成_类型:2_是否玩家独有:1
    /// </summary>
    public int bossMonsterDamageRatios;
    /// <summary>
    /// 221100_武器技能额外次数_类型:1_是否玩家独有:1
    /// </summary>
    public int weaponSkillExtraCount;
    /// <summary>
    /// 222100_体型大小_类型:2_是否玩家独有:0
    /// </summary>
    public int scaleRatios;
}
}