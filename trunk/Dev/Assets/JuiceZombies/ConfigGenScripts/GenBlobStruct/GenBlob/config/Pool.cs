//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbPool
{
    public static void Create(int i,ref BlobBuilder builder,ref BlobBuilderArray<ConfigTbPool> configTbPools,Tables tables)
    { 
        configTbPools[i].id = tables.TbPool.DataList[i].id;
        var allocatepowers =
        builder.Allocate(ref configTbPools[i].power,
        tables.TbPool.DataList[i].power.Count);
        for (var powers = 0; powers < tables.TbPool.DataList[i].power.Count; powers++)
        {
            allocatepowers[powers] = (int3) math.round(tables.TbPool.DataList[i].power[powers]);
        }
    }


    /// <summary>
    /// ID
    /// </summary>
    public int id;
    /// <summary>
    /// 实例概率池
    /// </summary>
    public BlobArray<int3> power;  
}
}