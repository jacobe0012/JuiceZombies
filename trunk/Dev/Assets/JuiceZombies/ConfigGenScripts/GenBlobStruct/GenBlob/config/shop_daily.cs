//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbshop_daily
{
    public static void Create(int i,ref BlobBuilder builder,ref BlobBuilderArray<ConfigTbshop_daily> configTbshop_dailys,Tables tables)
    { 
        configTbshop_dailys[i].sign = tables.Tbshop_daily.DataList[i].sign;
        configTbshop_dailys[i].pos = tables.Tbshop_daily.DataList[i].pos;
        var allocaterewards =
        builder.Allocate(ref configTbshop_dailys[i].reward,
        tables.Tbshop_daily.DataList[i].reward.Count);
        for (var rewards = 0; rewards < tables.Tbshop_daily.DataList[i].reward.Count; rewards++)
        {
            allocaterewards[rewards] = (int3) math.round(tables.Tbshop_daily.DataList[i].reward[rewards]);
        }
        configTbshop_dailys[i].discount = tables.Tbshop_daily.DataList[i].discount;
        var allocatecosts =
        builder.Allocate(ref configTbshop_dailys[i].cost,
        tables.Tbshop_daily.DataList[i].cost.Count);
        for (var costs = 0; costs < tables.Tbshop_daily.DataList[i].cost.Count; costs++)
        {
            allocatecosts[costs] = (int3) math.round(tables.Tbshop_daily.DataList[i].cost[costs]);
        }
        configTbshop_dailys[i].discountPic = tables.Tbshop_daily.DataList[i].discountPic;
        var allocatefreeRules =
        builder.Allocate(ref configTbshop_dailys[i].freeRule,
        tables.Tbshop_daily.DataList[i].freeRule.Count);
        for (var freeRules = 0; freeRules < tables.Tbshop_daily.DataList[i].freeRule.Count; freeRules++)
        {
            allocatefreeRules[freeRules] = (int2) math.round(tables.Tbshop_daily.DataList[i].freeRule[freeRules]);
        }
        configTbshop_dailys[i].times = tables.Tbshop_daily.DataList[i].times;
    }


    /// <summary>
    /// 标识
    /// </summary>
    public int sign;
    /// <summary>
    /// 位置
    /// </summary>
    public int pos;
    /// <summary>
    /// 获得
    /// </summary>
    public BlobArray<int3> reward;  
    /// <summary>
    /// 折扣
    /// </summary>
    public int discount;
    /// <summary>
    /// 消耗
    /// </summary>
    public BlobArray<int3> cost;  
    /// <summary>
    /// 折扣底板(图片资源)
    /// </summary>
    public FixedString128Bytes discountPic;
    /// <summary>
    /// 免费规则
    /// </summary>
    public BlobArray<int2> freeRule;  
    /// <summary>
    /// 可购买次数
    /// </summary>
    public int times;
}
}