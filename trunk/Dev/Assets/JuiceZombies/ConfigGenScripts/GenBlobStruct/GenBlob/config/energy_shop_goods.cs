//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbenergy_shop_goods
{
    public static void Create(int i,ref BlobBuilder builder,ref BlobBuilderArray<ConfigTbenergy_shop_goods> configTbenergy_shop_goodss,Tables tables)
    { 
        configTbenergy_shop_goodss[i].id = tables.Tbenergy_shop_goods.DataList[i].id;
        configTbenergy_shop_goodss[i].energyShop = tables.Tbenergy_shop_goods.DataList[i].energyShop;
        configTbenergy_shop_goodss[i].limit = tables.Tbenergy_shop_goods.DataList[i].limit;
        configTbenergy_shop_goodss[i].sort = tables.Tbenergy_shop_goods.DataList[i].sort;
        var allocatecosts =
        builder.Allocate(ref configTbenergy_shop_goodss[i].cost,
        tables.Tbenergy_shop_goods.DataList[i].cost.Count);
        for (var costs = 0; costs < tables.Tbenergy_shop_goods.DataList[i].cost.Count; costs++)
        {
            allocatecosts[costs] = (int3) math.round(tables.Tbenergy_shop_goods.DataList[i].cost[costs]);
        }
        var allocaterewards =
        builder.Allocate(ref configTbenergy_shop_goodss[i].reward,
        tables.Tbenergy_shop_goods.DataList[i].reward.Count);
        for (var rewards = 0; rewards < tables.Tbenergy_shop_goods.DataList[i].reward.Count; rewards++)
        {
            allocaterewards[rewards] = (int3) math.round(tables.Tbenergy_shop_goods.DataList[i].reward[rewards]);
        }
    }


    /// <summary>
    /// ID
    /// </summary>
    public int id;
    /// <summary>
    /// 商店id
    /// </summary>
    public int energyShop;
    /// <summary>
    /// 购买上限
    /// </summary>
    public int limit;
    /// <summary>
    /// 排序
    /// </summary>
    public int sort;
    /// <summary>
    /// 花费
    /// </summary>
    public BlobArray<int3> cost;  
    /// <summary>
    /// 奖品
    /// </summary>
    public BlobArray<int3> reward;  
}
}