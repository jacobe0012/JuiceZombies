//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbpiggy_bank
{
    public static void Create(int i,ref BlobBuilder builder,ref BlobBuilderArray<ConfigTbpiggy_bank> configTbpiggy_banks,Tables tables)
    { 
        configTbpiggy_banks[i].id = tables.Tbpiggy_bank.DataList[i].id;
        configTbpiggy_banks[i].type = tables.Tbpiggy_bank.DataList[i].type;
        configTbpiggy_banks[i].name = tables.Tbpiggy_bank.DataList[i].name;
        configTbpiggy_banks[i].pic = tables.Tbpiggy_bank.DataList[i].pic;
        configTbpiggy_banks[i].tagFunc = tables.Tbpiggy_bank.DataList[i].tagFunc;
        configTbpiggy_banks[i].price = tables.Tbpiggy_bank.DataList[i].price;
        configTbpiggy_banks[i].base0 = tables.Tbpiggy_bank.DataList[i].base0;
        configTbpiggy_banks[i].full = tables.Tbpiggy_bank.DataList[i].full;
        configTbpiggy_banks[i].unit = tables.Tbpiggy_bank.DataList[i].unit;
        var allocaterewards =
        builder.Allocate(ref configTbpiggy_banks[i].reward,
        tables.Tbpiggy_bank.DataList[i].reward.Count);
        for (var rewards = 0; rewards < tables.Tbpiggy_bank.DataList[i].reward.Count; rewards++)
        {
            allocaterewards[rewards] = (int3) math.round(tables.Tbpiggy_bank.DataList[i].reward[rewards]);
        }
        configTbpiggy_banks[i].sort = tables.Tbpiggy_bank.DataList[i].sort;
    }


    /// <summary>
    /// ID
    /// </summary>
    public int id;
    /// <summary>
    /// 类型
    /// </summary>
    public int type;
    /// <summary>
    /// 名称
    /// </summary>
    public FixedString128Bytes name;
    /// <summary>
    /// 图片(图片资源)
    /// </summary>
    public FixedString128Bytes pic;
    /// <summary>
    /// 模块id
    /// </summary>
    public int tagFunc;
    /// <summary>
    /// 价格档位
    /// </summary>
    public int price;
    /// <summary>
    /// 初始钻石数
    /// </summary>
    public int base0;
    /// <summary>
    /// 钻石上限
    /// </summary>
    public int full;
    /// <summary>
    /// 每单位体力增加钻石数
    /// </summary>
    public int unit;
    /// <summary>
    /// 奖励
    /// </summary>
    public BlobArray<int3> reward;  
    /// <summary>
    /// 排序
    /// </summary>
    public int sort;
}
}