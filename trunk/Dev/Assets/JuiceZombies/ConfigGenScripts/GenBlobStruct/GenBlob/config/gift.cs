//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbgift
{
    public static void Create(int i,ref BlobBuilder builder,ref BlobBuilderArray<ConfigTbgift> configTbgifts,Tables tables)
    { 
        configTbgifts[i].id = tables.Tbgift.DataList[i].id;
        configTbgifts[i].group = tables.Tbgift.DataList[i].group;
        configTbgifts[i].name = tables.Tbgift.DataList[i].name;
        configTbgifts[i].namePara = tables.Tbgift.DataList[i].namePara;
        configTbgifts[i].ratio = tables.Tbgift.DataList[i].ratio;
        configTbgifts[i].display = tables.Tbgift.DataList[i].display;
        var allocaterewards =
        builder.Allocate(ref configTbgifts[i].reward,
        tables.Tbgift.DataList[i].reward.Count);
        for (var rewards = 0; rewards < tables.Tbgift.DataList[i].reward.Count; rewards++)
        {
            allocaterewards[rewards] = (int3) math.round(tables.Tbgift.DataList[i].reward[rewards]);
        }
        configTbgifts[i].opYn = tables.Tbgift.DataList[i].opYn;
        configTbgifts[i].price = tables.Tbgift.DataList[i].price;
        var allocatefreeRules =
        builder.Allocate(ref configTbgifts[i].freeRule,
        tables.Tbgift.DataList[i].freeRule.Count);
        for (var freeRules = 0; freeRules < tables.Tbgift.DataList[i].freeRule.Count; freeRules++)
        {
            allocatefreeRules[freeRules] = (int2) math.round(tables.Tbgift.DataList[i].freeRule[freeRules]);
        }
        configTbgifts[i].times = tables.Tbgift.DataList[i].times;
        configTbgifts[i].popYn = tables.Tbgift.DataList[i].popYn;
    }


    /// <summary>
    /// 补给ID
    /// </summary>
    public int id;
    /// <summary>
    /// 组
    /// </summary>
    public int group;
    /// <summary>
    /// 街区补给-名称
    /// </summary>
    public FixedString128Bytes name;
    /// <summary>
    /// 名称参数
    /// </summary>
    public int namePara;
    /// <summary>
    /// 返利比
    /// </summary>
    public int ratio;
    /// <summary>
    /// 特殊奖励展示
    /// </summary>
    public int display;
    /// <summary>
    /// 奖励
    /// </summary>
    public BlobArray<int3> reward;  
    /// <summary>
    /// 是否显示原价
    /// </summary>
    public int opYn;
    /// <summary>
    /// 价格
    /// </summary>
    public int price;
    /// <summary>
    /// 免费规则
    /// </summary>
    public BlobArray<int2> freeRule;  
    /// <summary>
    /// 可购买次数
    /// </summary>
    public int times;
    /// <summary>
    /// 是否弹出
    /// </summary>
    public int popYn;
}
}