//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;
using Unity.Collections;
using Unity.Entities;
using Unity.Mathematics;



namespace cfg.blobstruct{

public  struct ConfigTbaudio
{
    public static void Create(int i,ref BlobBuilder builder,ref BlobBuilderArray<ConfigTbaudio> configTbaudios,Tables tables)
    { 
        configTbaudios[i].id = tables.Tbaudio.DataList[i].id;
        configTbaudios[i].group = tables.Tbaudio.DataList[i].group;
        var allocateresources =
        builder.Allocate(ref configTbaudios[i].resource,
        tables.Tbaudio.DataList[i].resource.Count);
        for (var resources = 0; resources < tables.Tbaudio.DataList[i].resource.Count; resources++)
        {
            allocateresources[resources] = tables.Tbaudio.DataList[i].resource[resources];
        }
        configTbaudios[i].volume = tables.Tbaudio.DataList[i].volume;
        configTbaudios[i].loopType = tables.Tbaudio.DataList[i].loopType;
    }


    /// <summary>
    /// 组id
    /// </summary>
    public int id;
    /// <summary>
    /// 音效组
    /// </summary>
    public FixedString128Bytes group;
    /// <summary>
    /// 音效资源
    /// </summary>
    public BlobArray<FixedString128Bytes> resource;  
    /// <summary>
    /// 音量大小
    /// </summary>
    public int volume;
    /// <summary>
    /// 循环类型
    /// </summary>
    public int loopType;
}
}