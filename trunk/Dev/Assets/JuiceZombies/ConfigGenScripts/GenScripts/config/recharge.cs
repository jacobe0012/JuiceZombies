//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class recharge :  Bright.Config.BeanBase 
{
    public recharge(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["tag_func"].IsNumber) { throw new SerializationException(); }  tagFunc = _json["tag_func"]; }
        { if(!_json["name"].IsString) { throw new SerializationException(); }  name = _json["name"]; }
        { if(!_json["pic"].IsString) { throw new SerializationException(); }  pic = _json["pic"]; }
        { if(!_json["sort"].IsNumber) { throw new SerializationException(); }  sort = _json["sort"]; }
        { if(!_json["unit"].IsNumber) { throw new SerializationException(); }  unit = _json["unit"]; }
        { if(!_json["price"].IsNumber) { throw new SerializationException(); }  price = _json["price"]; }
        { if(!_json["value"].IsNumber) { throw new SerializationException(); }  value = _json["value"]; }
        { if(!_json["value_extra"].IsNumber) { throw new SerializationException(); }  valueExtra = _json["value_extra"]; }
        { var __json0 = _json["free_rule"]; if(!__json0.IsArray) { throw new SerializationException(); } freeRule = new System.Collections.Generic.List<UnityEngine.Vector2>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { UnityEngine.Vector2 __v0;  { var _json2 = __e0; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } __v0 = new UnityEngine.Vector2(__x, __y); }  freeRule.Add(__v0); }   }
        PostInit();
    }

    public recharge(int id, int tag_func, string name, string pic, int sort, int unit, int price, int value, int value_extra, System.Collections.Generic.List<UnityEngine.Vector2> free_rule ) 
    {
        this.id = id;
        this.tagFunc = tag_func;
        this.name = name;
        this.pic = pic;
        this.sort = sort;
        this.unit = unit;
        this.price = price;
        this.value = value;
        this.valueExtra = value_extra;
        this.freeRule = free_rule;
        
        PostInit();
    }

    public static recharge Deserializerecharge(JSONNode _json)
    {
        return new config.recharge(_json);
    }

    /// <summary>
    /// ID
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 所属模块id
    /// </summary>
    public int tagFunc { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string name { get; private set; }
    /// <summary>
    /// 图片(图片资源)
    /// </summary>
    public string pic { get; private set; }
    /// <summary>
    /// 排序
    /// </summary>
    public int sort { get; private set; }
    /// <summary>
    /// 计价单位
    /// </summary>
    public int unit { get; private set; }
    /// <summary>
    /// 价格
    /// </summary>
    public int price { get; private set; }
    /// <summary>
    /// 商品数值
    /// </summary>
    public int value { get; private set; }
    /// <summary>
    /// 非首充额外
    /// </summary>
    public int valueExtra { get; private set; }
    /// <summary>
    /// 免费规则
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector2> freeRule { get; private set; }
    public const int __ID__ = 196179923;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "tagFunc:" + tagFunc + ","
        + "name:" + name + ","
        + "pic:" + pic + ","
        + "sort:" + sort + ","
        + "unit:" + unit + ","
        + "price:" + price + ","
        + "value:" + value + ","
        + "valueExtra:" + valueExtra + ","
        + "freeRule:" + Bright.Common.StringUtil.CollectionToString(freeRule) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}