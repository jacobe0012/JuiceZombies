//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class monopoly :  Bright.Config.BeanBase 
{
    public monopoly(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["tag_func"].IsNumber) { throw new SerializationException(); }  tagFunc = _json["tag_func"]; }
        { if(!_json["desc"].IsString) { throw new SerializationException(); }  desc = _json["desc"]; }
        { if(!_json["pic"].IsString) { throw new SerializationException(); }  pic = _json["pic"]; }
        { if(!_json["shop_pic"].IsString) { throw new SerializationException(); }  shopPic = _json["shop_pic"]; }
        { if(!_json["task_pic"].IsString) { throw new SerializationException(); }  taskPic = _json["task_pic"]; }
        { if(!_json["dice_item"].IsNumber) { throw new SerializationException(); }  diceItem = _json["dice_item"]; }
        { if(!_json["bug_dice_yn"].IsNumber) { throw new SerializationException(); }  bugDiceYn = _json["bug_dice_yn"]; }
        { if(!_json["shop_item"].IsNumber) { throw new SerializationException(); }  shopItem = _json["shop_item"]; }
        { if(!_json["monopoly_shop"].IsNumber) { throw new SerializationException(); }  monopolyShop = _json["monopoly_shop"]; }
        PostInit();
    }

    public monopoly(int id, int tag_func, string desc, string pic, string shop_pic, string task_pic, int dice_item, int bug_dice_yn, int shop_item, int monopoly_shop ) 
    {
        this.id = id;
        this.tagFunc = tag_func;
        this.desc = desc;
        this.pic = pic;
        this.shopPic = shop_pic;
        this.taskPic = task_pic;
        this.diceItem = dice_item;
        this.bugDiceYn = bug_dice_yn;
        this.shopItem = shop_item;
        this.monopolyShop = monopoly_shop;
        
        PostInit();
    }

    public static monopoly Deserializemonopoly(JSONNode _json)
    {
        return new config.monopoly(_json);
    }

    /// <summary>
    /// id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 所属模块id
    /// </summary>
    public int tagFunc { get; private set; }
    /// <summary>
    /// 详情
    /// </summary>
    public string desc { get; private set; }
    /// <summary>
    /// 图片(图片资源)
    /// </summary>
    public string pic { get; private set; }
    /// <summary>
    /// 兑换商店图片(图片资源)
    /// </summary>
    public string shopPic { get; private set; }
    /// <summary>
    /// 任务图片(图片资源)
    /// </summary>
    public string taskPic { get; private set; }
    /// <summary>
    /// 骰子道具id
    /// </summary>
    public int diceItem { get; private set; }
    /// <summary>
    /// 是否能够购买骰子
    /// </summary>
    public int bugDiceYn { get; private set; }
    /// <summary>
    /// 兑换道具id
    /// </summary>
    public int shopItem { get; private set; }
    /// <summary>
    /// 兑换列表
    /// </summary>
    public int monopolyShop { get; private set; }
    public const int __ID__ = 678994523;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "tagFunc:" + tagFunc + ","
        + "desc:" + desc + ","
        + "pic:" + pic + ","
        + "shopPic:" + shopPic + ","
        + "taskPic:" + taskPic + ","
        + "diceItem:" + diceItem + ","
        + "bugDiceYn:" + bugDiceYn + ","
        + "shopItem:" + shopItem + ","
        + "monopolyShop:" + monopolyShop + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}