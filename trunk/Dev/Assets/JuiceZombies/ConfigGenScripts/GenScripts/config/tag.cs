//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class tag :  Bright.Config.BeanBase 
{
    public tag(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["name"].IsString) { throw new SerializationException(); }  name = _json["name"]; }
        { if(!_json["icon"].IsString) { throw new SerializationException(); }  icon = _json["icon"]; }
        { if(!_json["sort"].IsNumber) { throw new SerializationException(); }  sort = _json["sort"]; }
        { if(!_json["init"].IsNumber) { throw new SerializationException(); }  init = _json["init"]; }
        { if(!_json["goto_yn"].IsNumber) { throw new SerializationException(); }  gotoYn = _json["goto_yn"]; }
        { if(!_json["unlock"].IsString) { throw new SerializationException(); }  unlock = _json["unlock"]; }
        PostInit();
    }

    public tag(int id, string name, string icon, int sort, int init, int goto_yn, string unlock ) 
    {
        this.id = id;
        this.name = name;
        this.icon = icon;
        this.sort = sort;
        this.init = init;
        this.gotoYn = goto_yn;
        this.unlock = unlock;
        
        PostInit();
    }

    public static tag Deserializetag(JSONNode _json)
    {
        return new config.tag(_json);
    }

    /// <summary>
    /// 页签id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string name { get; private set; }
    /// <summary>
    /// 图标(图片资源)
    /// </summary>
    public string icon { get; private set; }
    /// <summary>
    /// 排序
    /// </summary>
    public int sort { get; private set; }
    /// <summary>
    /// 默认页
    /// </summary>
    public int init { get; private set; }
    /// <summary>
    /// 可否跳转
    /// </summary>
    public int gotoYn { get; private set; }
    /// <summary>
    /// 解锁
    /// </summary>
    public string unlock { get; private set; }
    public const int __ID__ = 830388974;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "name:" + name + ","
        + "icon:" + icon + ","
        + "sort:" + sort + ","
        + "init:" + init + ","
        + "gotoYn:" + gotoYn + ","
        + "unlock:" + unlock + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}