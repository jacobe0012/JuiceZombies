//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class battle_status :  Bright.Config.BeanBase 
{
    public battle_status(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["special_effects"].IsNumber) { throw new SerializationException(); }  specialEffects = _json["special_effects"]; }
        { if(!_json["animation_group"].IsNumber) { throw new SerializationException(); }  animationGroup = _json["animation_group"]; }
        { if(!_json["sort"].IsNumber) { throw new SerializationException(); }  sort = _json["sort"]; }
        { if(!_json["atk"].IsNumber) { throw new SerializationException(); }  atk = _json["atk"]; }
        { if(!_json["atk_rate"].IsNumber) { throw new SerializationException(); }  atkRate = _json["atk_rate"]; }
        { var __json0 = _json["attr"]; if(!__json0.IsArray) { throw new SerializationException(); } attr = new System.Collections.Generic.List<UnityEngine.Vector2>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { UnityEngine.Vector2 __v0;  { var _json2 = __e0; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } __v0 = new UnityEngine.Vector2(__x, __y); }  attr.Add(__v0); }   }
        PostInit();
    }

    public battle_status(int id, int special_effects, int animation_group, int sort, int atk, int atk_rate, System.Collections.Generic.List<UnityEngine.Vector2> attr ) 
    {
        this.id = id;
        this.specialEffects = special_effects;
        this.animationGroup = animation_group;
        this.sort = sort;
        this.atk = atk;
        this.atkRate = atk_rate;
        this.attr = attr;
        
        PostInit();
    }

    public static battle_status Deserializebattle_status(JSONNode _json)
    {
        return new config.battle_status(_json);
    }

    /// <summary>
    /// 状态id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 特效id
    /// </summary>
    public int specialEffects { get; private set; }
    /// <summary>
    /// 动画分组
    /// </summary>
    public int animationGroup { get; private set; }
    /// <summary>
    /// 排序
    /// </summary>
    public int sort { get; private set; }
    /// <summary>
    /// 伤害万分比
    /// </summary>
    public int atk { get; private set; }
    /// <summary>
    /// 伤害速率
    /// </summary>
    public int atkRate { get; private set; }
    /// <summary>
    /// 属性变更
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector2> attr { get; private set; }
    public const int __ID__ = -216162387;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "specialEffects:" + specialEffects + ","
        + "animationGroup:" + animationGroup + ","
        + "sort:" + sort + ","
        + "atk:" + atk + ","
        + "atkRate:" + atkRate + ","
        + "attr:" + Bright.Common.StringUtil.CollectionToString(attr) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}