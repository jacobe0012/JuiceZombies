//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class equip_quality :  Bright.Config.BeanBase 
{
    public equip_quality(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["type"].IsNumber) { throw new SerializationException(); }  type = _json["type"]; }
        { if(!_json["subtype"].IsNumber) { throw new SerializationException(); }  subtype = _json["subtype"]; }
        { if(!_json["level_max"].IsNumber) { throw new SerializationException(); }  levelMax = _json["level_max"]; }
        { if(!_json["icon_sign"].IsString) { throw new SerializationException(); }  iconSign = _json["icon_sign"]; }
        { if(!_json["sign_num"].IsNumber) { throw new SerializationException(); }  signNum = _json["sign_num"]; }
        { var __json0 = _json["merge_rule"]; if(!__json0.IsArray) { throw new SerializationException(); } mergeRule = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  mergeRule.Add(__v0); }   }
        { if(!_json["merge_self"].IsNumber) { throw new SerializationException(); }  mergeSelf = _json["merge_self"]; }
        { if(!_json["value_index"].IsNumber) { throw new SerializationException(); }  valueIndex = _json["value_index"]; }
        PostInit();
    }

    public equip_quality(int id, int type, int subtype, int level_max, string icon_sign, int sign_num, System.Collections.Generic.List<int> merge_rule, int merge_self, int value_index ) 
    {
        this.id = id;
        this.type = type;
        this.subtype = subtype;
        this.levelMax = level_max;
        this.iconSign = icon_sign;
        this.signNum = sign_num;
        this.mergeRule = merge_rule;
        this.mergeSelf = merge_self;
        this.valueIndex = value_index;
        
        PostInit();
    }

    public static equip_quality Deserializeequip_quality(JSONNode _json)
    {
        return new config.equip_quality(_json);
    }

    /// <summary>
    /// 品质Id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 品质大类
    /// </summary>
    public int type { get; private set; }
    /// <summary>
    /// 品质子类
    /// </summary>
    public int subtype { get; private set; }
    /// <summary>
    /// 等级上限
    /// </summary>
    public int levelMax { get; private set; }
    /// <summary>
    /// 角标图片(图片资源)
    /// </summary>
    public string iconSign { get; private set; }
    /// <summary>
    /// 数字角标
    /// </summary>
    public int signNum { get; private set; }
    /// <summary>
    /// 合成需求
    /// </summary>
    public System.Collections.Generic.List<int> mergeRule { get; private set; }
    /// <summary>
    /// 合成材料是否需要与自身ID相同
    /// </summary>
    public int mergeSelf { get; private set; }
    /// <summary>
    /// 价值指数
    /// </summary>
    public int valueIndex { get; private set; }
    public const int __ID__ = -337935804;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "type:" + type + ","
        + "subtype:" + subtype + ","
        + "levelMax:" + levelMax + ","
        + "iconSign:" + iconSign + ","
        + "signNum:" + signNum + ","
        + "mergeRule:" + Bright.Common.StringUtil.CollectionToString(mergeRule) + ","
        + "mergeSelf:" + mergeSelf + ","
        + "valueIndex:" + valueIndex + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}