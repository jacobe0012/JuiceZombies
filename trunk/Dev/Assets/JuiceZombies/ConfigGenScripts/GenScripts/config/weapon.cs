//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class weapon :  Bright.Config.BeanBase 
{
    public weapon(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["type"].IsNumber) { throw new SerializationException(); }  type = _json["type"]; }
        { if(!_json["name"].IsString) { throw new SerializationException(); }  name = _json["name"]; }
        { if(!_json["pic"].IsString) { throw new SerializationException(); }  pic = _json["pic"]; }
        { if(!_json["desc"].IsString) { throw new SerializationException(); }  desc = _json["desc"]; }
        { if(!_json["quality"].IsNumber) { throw new SerializationException(); }  quality = _json["quality"]; }
        { if(!_json["diamond"].IsNumber) { throw new SerializationException(); }  diamond = _json["diamond"]; }
        { if(!_json["model"].IsString) { throw new SerializationException(); }  model = _json["model"]; }
        { if(!_json["atk_type"].IsNumber) { throw new SerializationException(); }  atkType = _json["atk_type"]; }
        { if(!_json["display_type"].IsNumber) { throw new SerializationException(); }  displayType = _json["display_type"]; }
        { if(!_json["para_atk"].IsNumber) { throw new SerializationException(); }  paraAtk = _json["para_atk"]; }
        { if(!_json["para_interval"].IsNumber) { throw new SerializationException(); }  paraInterval = _json["para_interval"]; }
        { if(!_json["para_force"].IsNumber) { throw new SerializationException(); }  paraForce = _json["para_force"]; }
        { if(!_json["para_speed"].IsNumber) { throw new SerializationException(); }  paraSpeed = _json["para_speed"]; }
        { var __json0 = _json["move_type"]; if(!__json0.IsArray) { throw new SerializationException(); } moveType = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  moveType.Add(__v0); }   }
        { if(!_json["para_1"].IsNumber) { throw new SerializationException(); }  para1 = _json["para_1"]; }
        { if(!_json["para_2"].IsNumber) { throw new SerializationException(); }  para2 = _json["para_2"]; }
        { if(!_json["para_3"].IsNumber) { throw new SerializationException(); }  para3 = _json["para_3"]; }
        { if(!_json["display_time"].IsNumber) { throw new SerializationException(); }  displayTime = _json["display_time"]; }
        { var __json0 = _json["display_para_1"]; if(!__json0.IsArray) { throw new SerializationException(); } displayPara1 = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  displayPara1.Add(__v0); }   }
        { var __json0 = _json["display_para_2"]; if(!__json0.IsArray) { throw new SerializationException(); } displayPara2 = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  displayPara2.Add(__v0); }   }
        PostInit();
    }

    public weapon(int id, int type, string name, string pic, string desc, int quality, int diamond, string model, int atk_type, int display_type, int para_atk, int para_interval, int para_force, int para_speed, System.Collections.Generic.List<int> move_type, int para_1, int para_2, int para_3, int display_time, System.Collections.Generic.List<int> display_para_1, System.Collections.Generic.List<int> display_para_2 ) 
    {
        this.id = id;
        this.type = type;
        this.name = name;
        this.pic = pic;
        this.desc = desc;
        this.quality = quality;
        this.diamond = diamond;
        this.model = model;
        this.atkType = atk_type;
        this.displayType = display_type;
        this.paraAtk = para_atk;
        this.paraInterval = para_interval;
        this.paraForce = para_force;
        this.paraSpeed = para_speed;
        this.moveType = move_type;
        this.para1 = para_1;
        this.para2 = para_2;
        this.para3 = para_3;
        this.displayTime = display_time;
        this.displayPara1 = display_para_1;
        this.displayPara2 = display_para_2;
        
        PostInit();
    }

    public static weapon Deserializeweapon(JSONNode _json)
    {
        return new config.weapon(_json);
    }

    /// <summary>
    /// id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 类型
    /// </summary>
    public int type { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string name { get; private set; }
    /// <summary>
    /// 图片(图片资源)
    /// </summary>
    public string pic { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string desc { get; private set; }
    /// <summary>
    /// 品质
    /// </summary>
    public int quality { get; private set; }
    /// <summary>
    /// 图鉴-解锁领取比特币
    /// </summary>
    public int diamond { get; private set; }
    /// <summary>
    /// 模型
    /// </summary>
    public string model { get; private set; }
    /// <summary>
    /// 攻击类型
    /// </summary>
    public int atkType { get; private set; }
    /// <summary>
    /// 动画类型
    /// </summary>
    public int displayType { get; private set; }
    /// <summary>
    /// 攻击力系数
    /// </summary>
    public int paraAtk { get; private set; }
    /// <summary>
    /// 攻击间隔
    /// </summary>
    public int paraInterval { get; private set; }
    /// <summary>
    /// 推力系数
    /// </summary>
    public int paraForce { get; private set; }
    /// <summary>
    /// 移动速度系数
    /// </summary>
    public int paraSpeed { get; private set; }
    /// <summary>
    /// 移动规则
    /// </summary>
    public System.Collections.Generic.List<int> moveType { get; private set; }
    /// <summary>
    /// 参数1
    /// </summary>
    public int para1 { get; private set; }
    /// <summary>
    /// 参数2
    /// </summary>
    public int para2 { get; private set; }
    /// <summary>
    /// 参数3
    /// </summary>
    public int para3 { get; private set; }
    /// <summary>
    /// 总时间(毫秒)
    /// </summary>
    public int displayTime { get; private set; }
    /// <summary>
    /// 武器攻击动画参数
    /// </summary>
    public System.Collections.Generic.List<int> displayPara1 { get; private set; }
    /// <summary>
    /// 普通Boss施法动画参数/角色死亡武器动画参数
    /// </summary>
    public System.Collections.Generic.List<int> displayPara2 { get; private set; }
    public const int __ID__ = -804186552;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "type:" + type + ","
        + "name:" + name + ","
        + "pic:" + pic + ","
        + "desc:" + desc + ","
        + "quality:" + quality + ","
        + "diamond:" + diamond + ","
        + "model:" + model + ","
        + "atkType:" + atkType + ","
        + "displayType:" + displayType + ","
        + "paraAtk:" + paraAtk + ","
        + "paraInterval:" + paraInterval + ","
        + "paraForce:" + paraForce + ","
        + "paraSpeed:" + paraSpeed + ","
        + "moveType:" + Bright.Common.StringUtil.CollectionToString(moveType) + ","
        + "para1:" + para1 + ","
        + "para2:" + para2 + ","
        + "para3:" + para3 + ","
        + "displayTime:" + displayTime + ","
        + "displayPara1:" + Bright.Common.StringUtil.CollectionToString(displayPara1) + ","
        + "displayPara2:" + Bright.Common.StringUtil.CollectionToString(displayPara2) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}