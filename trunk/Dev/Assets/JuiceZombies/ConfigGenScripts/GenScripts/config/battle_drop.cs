//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class battle_drop :  Bright.Config.BeanBase 
{
    public battle_drop(JSONNode _json) 
    {
        { if(!_json["assist"].IsNumber) { throw new SerializationException(); }  assist = _json["assist"]; }
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["pack_ind_yn"].IsNumber) { throw new SerializationException(); }  packIndYn = _json["pack_ind_yn"]; }
        { if(!_json["pack_id"].IsNumber) { throw new SerializationException(); }  packId = _json["pack_id"]; }
        { if(!_json["pack_power"].IsNumber) { throw new SerializationException(); }  packPower = _json["pack_power"]; }
        { if(!_json["item_ind_yn"].IsNumber) { throw new SerializationException(); }  itemIndYn = _json["item_ind_yn"]; }
        { if(!_json["item_power"].IsNumber) { throw new SerializationException(); }  itemPower = _json["item_power"]; }
        { var __json0 = _json["reward"]; if(!__json0.IsArray) { throw new SerializationException(); } reward = new System.Collections.Generic.List<UnityEngine.Vector2>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { UnityEngine.Vector2 __v0;  { var _json2 = __e0; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } __v0 = new UnityEngine.Vector2(__x, __y); }  reward.Add(__v0); }   }
        PostInit();
    }

    public battle_drop(int assist, int id, int pack_ind_yn, int pack_id, int pack_power, int item_ind_yn, int item_power, System.Collections.Generic.List<UnityEngine.Vector2> reward ) 
    {
        this.assist = assist;
        this.id = id;
        this.packIndYn = pack_ind_yn;
        this.packId = pack_id;
        this.packPower = pack_power;
        this.itemIndYn = item_ind_yn;
        this.itemPower = item_power;
        this.reward = reward;
        
        PostInit();
    }

    public static battle_drop Deserializebattle_drop(JSONNode _json)
    {
        return new config.battle_drop(_json);
    }

    /// <summary>
    /// 辅助主键id
    /// </summary>
    public int assist { get; private set; }
    /// <summary>
    /// 掉落组Id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 包是否独立
    /// </summary>
    public int packIndYn { get; private set; }
    /// <summary>
    /// 包id
    /// </summary>
    public int packId { get; private set; }
    /// <summary>
    /// 包权重
    /// </summary>
    public int packPower { get; private set; }
    /// <summary>
    /// 物品是否独立
    /// </summary>
    public int itemIndYn { get; private set; }
    /// <summary>
    /// 物品权重
    /// </summary>
    public int itemPower { get; private set; }
    /// <summary>
    /// 获取
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector2> reward { get; private set; }
    public const int __ID__ = -2011844246;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "assist:" + assist + ","
        + "id:" + id + ","
        + "packIndYn:" + packIndYn + ","
        + "packId:" + packId + ","
        + "packPower:" + packPower + ","
        + "itemIndYn:" + itemIndYn + ","
        + "itemPower:" + itemPower + ","
        + "reward:" + Bright.Common.StringUtil.CollectionToString(reward) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}