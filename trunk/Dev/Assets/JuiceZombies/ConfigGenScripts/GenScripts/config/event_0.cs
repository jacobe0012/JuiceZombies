//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class event_0 :  Bright.Config.BeanBase 
{
    public event_0(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["trigger_type"].IsNumber) { throw new SerializationException(); }  triggerType = _json["trigger_type"]; }
        { var __json0 = _json["trigger_para"]; if(!__json0.IsArray) { throw new SerializationException(); } triggerPara = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  triggerPara.Add(__v0); }   }
        { if(!_json["trigger_num"].IsNumber) { throw new SerializationException(); }  triggerNum = _json["trigger_num"]; }
        { if(!_json["type"].IsNumber) { throw new SerializationException(); }  type = _json["type"]; }
        { var __json0 = _json["para_list"]; if(!__json0.IsArray) { throw new SerializationException(); } paraList = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  paraList.Add(__v0); }   }
        { if(!_json["para_1"].IsNumber) { throw new SerializationException(); }  para1 = _json["para_1"]; }
        { if(!_json["para_2"].IsNumber) { throw new SerializationException(); }  para2 = _json["para_2"]; }
        { if(!_json["para_3"].IsNumber) { throw new SerializationException(); }  para3 = _json["para_3"]; }
        { if(!_json["para_4"].IsNumber) { throw new SerializationException(); }  para4 = _json["para_4"]; }
        { if(!_json["para_5"].IsNumber) { throw new SerializationException(); }  para5 = _json["para_5"]; }
        { if(!_json["para_6"].IsNumber) { throw new SerializationException(); }  para6 = _json["para_6"]; }
        { if(!_json["para_7"].IsNumber) { throw new SerializationException(); }  para7 = _json["para_7"]; }
        PostInit();
    }

    public event_0(int id, int trigger_type, System.Collections.Generic.List<int> trigger_para, int trigger_num, int type, System.Collections.Generic.List<int> para_list, int para_1, int para_2, int para_3, int para_4, int para_5, int para_6, int para_7 ) 
    {
        this.id = id;
        this.triggerType = trigger_type;
        this.triggerPara = trigger_para;
        this.triggerNum = trigger_num;
        this.type = type;
        this.paraList = para_list;
        this.para1 = para_1;
        this.para2 = para_2;
        this.para3 = para_3;
        this.para4 = para_4;
        this.para5 = para_5;
        this.para6 = para_6;
        this.para7 = para_7;
        
        PostInit();
    }

    public static event_0 Deserializeevent_0(JSONNode _json)
    {
        return new config.event_0(_json);
    }

    /// <summary>
    /// 事件id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 触发类型
    /// </summary>
    public int triggerType { get; private set; }
    /// <summary>
    /// 触发参数
    /// </summary>
    public System.Collections.Generic.List<int> triggerPara { get; private set; }
    /// <summary>
    /// 触发次数上限
    /// </summary>
    public int triggerNum { get; private set; }
    /// <summary>
    /// 事件类型
    /// </summary>
    public int type { get; private set; }
    /// <summary>
    /// 参数列表
    /// </summary>
    public System.Collections.Generic.List<int> paraList { get; private set; }
    /// <summary>
    /// 参数1
    /// </summary>
    public int para1 { get; private set; }
    /// <summary>
    /// 参数2
    /// </summary>
    public int para2 { get; private set; }
    /// <summary>
    /// 参数3
    /// </summary>
    public int para3 { get; private set; }
    /// <summary>
    /// 参数4
    /// </summary>
    public int para4 { get; private set; }
    /// <summary>
    /// 参数5
    /// </summary>
    public int para5 { get; private set; }
    /// <summary>
    /// 参数6
    /// </summary>
    public int para6 { get; private set; }
    /// <summary>
    /// 参数7
    /// </summary>
    public int para7 { get; private set; }
    public const int __ID__ = -1759809249;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "triggerType:" + triggerType + ","
        + "triggerPara:" + Bright.Common.StringUtil.CollectionToString(triggerPara) + ","
        + "triggerNum:" + triggerNum + ","
        + "type:" + type + ","
        + "paraList:" + Bright.Common.StringUtil.CollectionToString(paraList) + ","
        + "para1:" + para1 + ","
        + "para2:" + para2 + ","
        + "para3:" + para3 + ","
        + "para4:" + para4 + ","
        + "para5:" + para5 + ","
        + "para6:" + para6 + ","
        + "para7:" + para7 + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}