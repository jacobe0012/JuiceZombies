//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class tag_func :  Bright.Config.BeanBase 
{
    public tag_func(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["tag_id"].IsNumber) { throw new SerializationException(); }  tagId = _json["tag_id"]; }
        { if(!_json["pos_type"].IsNumber) { throw new SerializationException(); }  posType = _json["pos_type"]; }
        { if(!_json["sub1_name"].IsString) { throw new SerializationException(); }  sub1Name = _json["sub1_name"]; }
        { if(!_json["sub1_icon"].IsString) { throw new SerializationException(); }  sub1Icon = _json["sub1_icon"]; }
        { if(!_json["sub2_pos"].IsNumber) { throw new SerializationException(); }  sub2Pos = _json["sub2_pos"]; }
        { if(!_json["sub2_name"].IsString) { throw new SerializationException(); }  sub2Name = _json["sub2_name"]; }
        { if(!_json["sub2_icon"].IsString) { throw new SerializationException(); }  sub2Icon = _json["sub2_icon"]; }
        { if(!_json["sort"].IsNumber) { throw new SerializationException(); }  sort = _json["sort"]; }
        { if(!_json["name"].IsString) { throw new SerializationException(); }  name = _json["name"]; }
        { if(!_json["icon"].IsString) { throw new SerializationException(); }  icon = _json["icon"]; }
        { if(!_json["desc"].IsString) { throw new SerializationException(); }  desc = _json["desc"]; }
        { if(!_json["unlock"].IsString) { throw new SerializationException(); }  unlock = _json["unlock"]; }
        PostInit();
    }

    public tag_func(int id, int tag_id, int pos_type, string sub1_name, string sub1_icon, int sub2_pos, string sub2_name, string sub2_icon, int sort, string name, string icon, string desc, string unlock ) 
    {
        this.id = id;
        this.tagId = tag_id;
        this.posType = pos_type;
        this.sub1Name = sub1_name;
        this.sub1Icon = sub1_icon;
        this.sub2Pos = sub2_pos;
        this.sub2Name = sub2_name;
        this.sub2Icon = sub2_icon;
        this.sort = sort;
        this.name = name;
        this.icon = icon;
        this.desc = desc;
        this.unlock = unlock;
        
        PostInit();
    }

    public static tag_func Deserializetag_func(JSONNode _json)
    {
        return new config.tag_func(_json);
    }

    /// <summary>
    /// 模块id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 所属页签id
    /// </summary>
    public int tagId { get; private set; }
    /// <summary>
    /// 1级位置类型
    /// </summary>
    public int posType { get; private set; }
    /// <summary>
    /// 1级页签名称
    /// </summary>
    public string sub1Name { get; private set; }
    /// <summary>
    /// 1级页签图标(图片资源)
    /// </summary>
    public string sub1Icon { get; private set; }
    /// <summary>
    /// 2级位置类型
    /// </summary>
    public int sub2Pos { get; private set; }
    /// <summary>
    /// 2级页签名称
    /// </summary>
    public string sub2Name { get; private set; }
    /// <summary>
    /// 2级页签图标(图片资源)
    /// </summary>
    public string sub2Icon { get; private set; }
    /// <summary>
    /// 排序
    /// </summary>
    public int sort { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string name { get; private set; }
    /// <summary>
    /// 图标(图片资源)
    /// </summary>
    public string icon { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string desc { get; private set; }
    /// <summary>
    /// 解锁
    /// </summary>
    public string unlock { get; private set; }
    public const int __ID__ = 238142837;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "tagId:" + tagId + ","
        + "posType:" + posType + ","
        + "sub1Name:" + sub1Name + ","
        + "sub1Icon:" + sub1Icon + ","
        + "sub2Pos:" + sub2Pos + ","
        + "sub2Name:" + sub2Name + ","
        + "sub2Icon:" + sub2Icon + ","
        + "sort:" + sort + ","
        + "name:" + name + ","
        + "icon:" + icon + ","
        + "desc:" + desc + ","
        + "unlock:" + unlock + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}