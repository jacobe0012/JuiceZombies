//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class announce :  Bright.Config.BeanBase 
{
    public announce(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["title"].IsString) { throw new SerializationException(); }  title = _json["title"]; }
        { if(!_json["pic"].IsString) { throw new SerializationException(); }  pic = _json["pic"]; }
        { if(!_json["content"].IsString) { throw new SerializationException(); }  content = _json["content"]; }
        { var __json0 = _json["para"]; if(!__json0.IsArray) { throw new SerializationException(); } para = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  para.Add(__v0); }   }
        { if(!_json["valid"].IsNumber) { throw new SerializationException(); }  valid = _json["valid"]; }
        PostInit();
    }

    public announce(int id, string title, string pic, string content, System.Collections.Generic.List<string> para, int valid ) 
    {
        this.id = id;
        this.title = title;
        this.pic = pic;
        this.content = content;
        this.para = para;
        this.valid = valid;
        
        PostInit();
    }

    public static announce Deserializeannounce(JSONNode _json)
    {
        return new config.announce(_json);
    }

    /// <summary>
    /// 公告项id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 公告标题
    /// </summary>
    public string title { get; private set; }
    /// <summary>
    /// 公告图片(图片资源)
    /// </summary>
    public string pic { get; private set; }
    /// <summary>
    /// 公告正文
    /// </summary>
    public string content { get; private set; }
    /// <summary>
    /// 文本参数
    /// </summary>
    public System.Collections.Generic.List<string> para { get; private set; }
    /// <summary>
    /// 有效期(天数)
    /// </summary>
    public int valid { get; private set; }
    public const int __ID__ = 352750997;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "title:" + title + ","
        + "pic:" + pic + ","
        + "content:" + content + ","
        + "para:" + Bright.Common.StringUtil.CollectionToString(para) + ","
        + "valid:" + valid + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}