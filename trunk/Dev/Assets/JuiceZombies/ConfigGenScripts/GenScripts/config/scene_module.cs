//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class scene_module :  Bright.Config.BeanBase 
{
    public scene_module(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["type"].IsNumber) { throw new SerializationException(); }  type = _json["type"]; }
        { if(!_json["element_id"].IsNumber) { throw new SerializationException(); }  elementId = _json["element_id"]; }
        { if(!_json["refresh_monster_yn"].IsNumber) { throw new SerializationException(); }  refreshMonsterYn = _json["refresh_monster_yn"]; }
        { var __json0 = _json["skill_group"]; if(!__json0.IsArray) { throw new SerializationException(); } skillGroup = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  skillGroup.Add(__v0); }   }
        { if(!_json["display_order"].IsNumber) { throw new SerializationException(); }  displayOrder = _json["display_order"]; }
        { if(!_json["path_priority"].IsNumber) { throw new SerializationException(); }  pathPriority = _json["path_priority"]; }
        { if(!_json["hp"].IsNumber) { throw new SerializationException(); }  hp = _json["hp"]; }
        { if(!_json["duration"].IsNumber) { throw new SerializationException(); }  duration = _json["duration"]; }
        { var __json0 = _json["hp_pic"]; if(!__json0.IsArray) { throw new SerializationException(); } hpPic = new System.Collections.Generic.List<UnityEngine.Vector2>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { UnityEngine.Vector2 __v0;  { var _json2 = __e0; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } __v0 = new UnityEngine.Vector2(__x, __y); }  hpPic.Add(__v0); }   }
        { var __json0 = _json["battle_drop"]; if(!__json0.IsArray) { throw new SerializationException(); } battleDrop = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  battleDrop.Add(__v0); }   }
        { var __json0 = _json["hit_animation_para"]; if(!__json0.IsArray) { throw new SerializationException(); } hitAnimationPara = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  hitAnimationPara.Add(__v0); }   }
        { var __json0 = _json["pic_hit_animation_para"]; if(!__json0.IsArray) { throw new SerializationException(); } picHitAnimationPara = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  picHitAnimationPara.Add(__v0); }   }
        { if(!_json["impact_speed_ratio"].IsNumber) { throw new SerializationException(); }  impactSpeedRatio = _json["impact_speed_ratio"]; }
        { if(!_json["impact_damage_ratio"].IsNumber) { throw new SerializationException(); }  impactDamageRatio = _json["impact_damage_ratio"]; }
        { if(!_json["mass"].IsNumber) { throw new SerializationException(); }  mass = _json["mass"]; }
        { if(!_json["map_type"].IsNumber) { throw new SerializationException(); }  mapType = _json["map_type"]; }
        { if(!_json["edge_width"].IsNumber) { throw new SerializationException(); }  edgeWidth = _json["edge_width"]; }
        { if(!_json["model"].IsString) { throw new SerializationException(); }  model = _json["model"]; }
        { var __json0 = _json["size"]; if(!__json0.IsArray) { throw new SerializationException(); } size = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  size.Add(__v0); }   }
        { var __json0 = _json["bg_up"]; if(!__json0.IsArray) { throw new SerializationException(); } bgUp = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  bgUp.Add(__v0); }   }
        { var __json0 = _json["bg_down"]; if(!__json0.IsArray) { throw new SerializationException(); } bgDown = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  bgDown.Add(__v0); }   }
        { var __json0 = _json["bg_left"]; if(!__json0.IsArray) { throw new SerializationException(); } bgLeft = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  bgLeft.Add(__v0); }   }
        { var __json0 = _json["bg_right"]; if(!__json0.IsArray) { throw new SerializationException(); } bgRight = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  bgRight.Add(__v0); }   }
        { if(!_json["pass_animation"].IsString) { throw new SerializationException(); }  passAnimation = _json["pass_animation"]; }
        { if(!_json["pass_speed"].IsNumber) { throw new SerializationException(); }  passSpeed = _json["pass_speed"]; }
        { var __json0 = _json["ruin_resource"]; if(!__json0.IsArray) { throw new SerializationException(); } ruinResource = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  ruinResource.Add(__v0); }   }
        { if(!_json["disappear_time"].IsNumber) { throw new SerializationException(); }  disappearTime = _json["disappear_time"]; }
        PostInit();
    }

    public scene_module(int id, int type, int element_id, int refresh_monster_yn, System.Collections.Generic.List<int> skill_group, int display_order, int path_priority, int hp, int duration, System.Collections.Generic.List<UnityEngine.Vector2> hp_pic, System.Collections.Generic.List<int> battle_drop, System.Collections.Generic.List<int> hit_animation_para, System.Collections.Generic.List<int> pic_hit_animation_para, int impact_speed_ratio, int impact_damage_ratio, int mass, int map_type, int edge_width, string model, System.Collections.Generic.List<int> size, System.Collections.Generic.List<string> bg_up, System.Collections.Generic.List<string> bg_down, System.Collections.Generic.List<string> bg_left, System.Collections.Generic.List<string> bg_right, string pass_animation, int pass_speed, System.Collections.Generic.List<string> ruin_resource, int disappear_time ) 
    {
        this.id = id;
        this.type = type;
        this.elementId = element_id;
        this.refreshMonsterYn = refresh_monster_yn;
        this.skillGroup = skill_group;
        this.displayOrder = display_order;
        this.pathPriority = path_priority;
        this.hp = hp;
        this.duration = duration;
        this.hpPic = hp_pic;
        this.battleDrop = battle_drop;
        this.hitAnimationPara = hit_animation_para;
        this.picHitAnimationPara = pic_hit_animation_para;
        this.impactSpeedRatio = impact_speed_ratio;
        this.impactDamageRatio = impact_damage_ratio;
        this.mass = mass;
        this.mapType = map_type;
        this.edgeWidth = edge_width;
        this.model = model;
        this.size = size;
        this.bgUp = bg_up;
        this.bgDown = bg_down;
        this.bgLeft = bg_left;
        this.bgRight = bg_right;
        this.passAnimation = pass_animation;
        this.passSpeed = pass_speed;
        this.ruinResource = ruin_resource;
        this.disappearTime = disappear_time;
        
        PostInit();
    }

    public static scene_module Deserializescene_module(JSONNode _json)
    {
        return new config.scene_module(_json);
    }

    /// <summary>
    /// id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 组件类型
    /// </summary>
    public int type { get; private set; }
    /// <summary>
    /// 元素id
    /// </summary>
    public int elementId { get; private set; }
    /// <summary>
    /// 是否允许怪物刷新
    /// </summary>
    public int refreshMonsterYn { get; private set; }
    /// <summary>
    /// 技能组
    /// </summary>
    public System.Collections.Generic.List<int> skillGroup { get; private set; }
    /// <summary>
    /// 展示层级
    /// </summary>
    public int displayOrder { get; private set; }
    /// <summary>
    /// 寻路优先级
    /// </summary>
    public int pathPriority { get; private set; }
    /// <summary>
    /// 生命值
    /// </summary>
    public int hp { get; private set; }
    /// <summary>
    /// 持续时间
    /// </summary>
    public int duration { get; private set; }
    /// <summary>
    /// 低生命时图片顺序
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector2> hpPic { get; private set; }
    /// <summary>
    /// 障碍物掉落
    /// </summary>
    public System.Collections.Generic.List<int> battleDrop { get; private set; }
    /// <summary>
    /// 抖动参数
    /// </summary>
    public System.Collections.Generic.List<int> hitAnimationPara { get; private set; }
    /// <summary>
    /// 图片切换时抖动
    /// </summary>
    public System.Collections.Generic.List<int> picHitAnimationPara { get; private set; }
    /// <summary>
    /// 碰撞反弹速度比例
    /// </summary>
    public int impactSpeedRatio { get; private set; }
    /// <summary>
    /// 碰撞伤害比例
    /// </summary>
    public int impactDamageRatio { get; private set; }
    /// <summary>
    /// 质量
    /// </summary>
    public int mass { get; private set; }
    /// <summary>
    /// 地图类型
    /// </summary>
    public int mapType { get; private set; }
    /// <summary>
    /// 边缘宽度
    /// </summary>
    public int edgeWidth { get; private set; }
    /// <summary>
    /// 图片(图片资源)
    /// </summary>
    public string model { get; private set; }
    /// <summary>
    /// 尺寸
    /// </summary>
    public System.Collections.Generic.List<int> size { get; private set; }
    /// <summary>
    /// 背景图-上(图片资源)
    /// </summary>
    public System.Collections.Generic.List<string> bgUp { get; private set; }
    /// <summary>
    /// 背景图-下(图片资源)
    /// </summary>
    public System.Collections.Generic.List<string> bgDown { get; private set; }
    /// <summary>
    /// 背景图-左(图片资源)
    /// </summary>
    public System.Collections.Generic.List<string> bgLeft { get; private set; }
    /// <summary>
    /// 背景图-右(图片资源)
    /// </summary>
    public System.Collections.Generic.List<string> bgRight { get; private set; }
    /// <summary>
    /// 通过动画
    /// </summary>
    public string passAnimation { get; private set; }
    /// <summary>
    /// 通过动画速率
    /// </summary>
    public int passSpeed { get; private set; }
    /// <summary>
    /// 命中资源
    /// </summary>
    public System.Collections.Generic.List<string> ruinResource { get; private set; }
    /// <summary>
    /// 消失时间
    /// </summary>
    public int disappearTime { get; private set; }
    public const int __ID__ = 1631099051;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "type:" + type + ","
        + "elementId:" + elementId + ","
        + "refreshMonsterYn:" + refreshMonsterYn + ","
        + "skillGroup:" + Bright.Common.StringUtil.CollectionToString(skillGroup) + ","
        + "displayOrder:" + displayOrder + ","
        + "pathPriority:" + pathPriority + ","
        + "hp:" + hp + ","
        + "duration:" + duration + ","
        + "hpPic:" + Bright.Common.StringUtil.CollectionToString(hpPic) + ","
        + "battleDrop:" + Bright.Common.StringUtil.CollectionToString(battleDrop) + ","
        + "hitAnimationPara:" + Bright.Common.StringUtil.CollectionToString(hitAnimationPara) + ","
        + "picHitAnimationPara:" + Bright.Common.StringUtil.CollectionToString(picHitAnimationPara) + ","
        + "impactSpeedRatio:" + impactSpeedRatio + ","
        + "impactDamageRatio:" + impactDamageRatio + ","
        + "mass:" + mass + ","
        + "mapType:" + mapType + ","
        + "edgeWidth:" + edgeWidth + ","
        + "model:" + model + ","
        + "size:" + Bright.Common.StringUtil.CollectionToString(size) + ","
        + "bgUp:" + Bright.Common.StringUtil.CollectionToString(bgUp) + ","
        + "bgDown:" + Bright.Common.StringUtil.CollectionToString(bgDown) + ","
        + "bgLeft:" + Bright.Common.StringUtil.CollectionToString(bgLeft) + ","
        + "bgRight:" + Bright.Common.StringUtil.CollectionToString(bgRight) + ","
        + "passAnimation:" + passAnimation + ","
        + "passSpeed:" + passSpeed + ","
        + "ruinResource:" + Bright.Common.StringUtil.CollectionToString(ruinResource) + ","
        + "disappearTime:" + disappearTime + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}