//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class shop_daily :  Bright.Config.BeanBase 
{
    public shop_daily(JSONNode _json) 
    {
        { if(!_json["sign"].IsNumber) { throw new SerializationException(); }  sign = _json["sign"]; }
        { if(!_json["pos"].IsNumber) { throw new SerializationException(); }  pos = _json["pos"]; }
        { var __json0 = _json["reward"]; if(!__json0.IsArray) { throw new SerializationException(); } reward = new System.Collections.Generic.List<UnityEngine.Vector3>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { UnityEngine.Vector3 __v0;  { var _json2 = __e0; if(!_json2.IsObject) { throw new SerializationException(); } float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } float __z; { if(!_json2["z"].IsNumber) { throw new SerializationException(); }  __z = _json2["z"]; }  __v0 = new UnityEngine.Vector3(__x, __y,__z); }  reward.Add(__v0); }   }
        { if(!_json["discount"].IsNumber) { throw new SerializationException(); }  discount = _json["discount"]; }
        { var __json0 = _json["cost"]; if(!__json0.IsArray) { throw new SerializationException(); } cost = new System.Collections.Generic.List<UnityEngine.Vector3>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { UnityEngine.Vector3 __v0;  { var _json2 = __e0; if(!_json2.IsObject) { throw new SerializationException(); } float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } float __z; { if(!_json2["z"].IsNumber) { throw new SerializationException(); }  __z = _json2["z"]; }  __v0 = new UnityEngine.Vector3(__x, __y,__z); }  cost.Add(__v0); }   }
        { if(!_json["discount_pic"].IsString) { throw new SerializationException(); }  discountPic = _json["discount_pic"]; }
        { var __json0 = _json["free_rule"]; if(!__json0.IsArray) { throw new SerializationException(); } freeRule = new System.Collections.Generic.List<UnityEngine.Vector2>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { UnityEngine.Vector2 __v0;  { var _json2 = __e0; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } __v0 = new UnityEngine.Vector2(__x, __y); }  freeRule.Add(__v0); }   }
        { if(!_json["times"].IsNumber) { throw new SerializationException(); }  times = _json["times"]; }
        PostInit();
    }

    public shop_daily(int sign, int pos, System.Collections.Generic.List<UnityEngine.Vector3> reward, int discount, System.Collections.Generic.List<UnityEngine.Vector3> cost, string discount_pic, System.Collections.Generic.List<UnityEngine.Vector2> free_rule, int times ) 
    {
        this.sign = sign;
        this.pos = pos;
        this.reward = reward;
        this.discount = discount;
        this.cost = cost;
        this.discountPic = discount_pic;
        this.freeRule = free_rule;
        this.times = times;
        
        PostInit();
    }

    public static shop_daily Deserializeshop_daily(JSONNode _json)
    {
        return new config.shop_daily(_json);
    }

    /// <summary>
    /// 标识
    /// </summary>
    public int sign { get; private set; }
    /// <summary>
    /// 位置
    /// </summary>
    public int pos { get; private set; }
    /// <summary>
    /// 获得
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> reward { get; private set; }
    /// <summary>
    /// 折扣
    /// </summary>
    public int discount { get; private set; }
    /// <summary>
    /// 消耗
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> cost { get; private set; }
    /// <summary>
    /// 折扣底板(图片资源)
    /// </summary>
    public string discountPic { get; private set; }
    /// <summary>
    /// 免费规则
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector2> freeRule { get; private set; }
    /// <summary>
    /// 可购买次数
    /// </summary>
    public int times { get; private set; }
    public const int __ID__ = 400026044;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "sign:" + sign + ","
        + "pos:" + pos + ","
        + "reward:" + Bright.Common.StringUtil.CollectionToString(reward) + ","
        + "discount:" + discount + ","
        + "cost:" + Bright.Common.StringUtil.CollectionToString(cost) + ","
        + "discountPic:" + discountPic + ","
        + "freeRule:" + Bright.Common.StringUtil.CollectionToString(freeRule) + ","
        + "times:" + times + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}