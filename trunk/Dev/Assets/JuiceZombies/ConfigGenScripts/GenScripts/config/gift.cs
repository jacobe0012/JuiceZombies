//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class gift :  Bright.Config.BeanBase 
{
    public gift(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["group"].IsNumber) { throw new SerializationException(); }  group = _json["group"]; }
        { if(!_json["name"].IsString) { throw new SerializationException(); }  name = _json["name"]; }
        { if(!_json["name_para"].IsNumber) { throw new SerializationException(); }  namePara = _json["name_para"]; }
        { if(!_json["ratio"].IsNumber) { throw new SerializationException(); }  ratio = _json["ratio"]; }
        { if(!_json["display"].IsNumber) { throw new SerializationException(); }  display = _json["display"]; }
        { var __json0 = _json["reward"]; if(!__json0.IsArray) { throw new SerializationException(); } reward = new System.Collections.Generic.List<UnityEngine.Vector3>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { UnityEngine.Vector3 __v0;  { var _json2 = __e0; if(!_json2.IsObject) { throw new SerializationException(); } float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } float __z; { if(!_json2["z"].IsNumber) { throw new SerializationException(); }  __z = _json2["z"]; }  __v0 = new UnityEngine.Vector3(__x, __y,__z); }  reward.Add(__v0); }   }
        { if(!_json["op_yn"].IsNumber) { throw new SerializationException(); }  opYn = _json["op_yn"]; }
        { if(!_json["price"].IsNumber) { throw new SerializationException(); }  price = _json["price"]; }
        { var __json0 = _json["free_rule"]; if(!__json0.IsArray) { throw new SerializationException(); } freeRule = new System.Collections.Generic.List<UnityEngine.Vector2>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { UnityEngine.Vector2 __v0;  { var _json2 = __e0; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } __v0 = new UnityEngine.Vector2(__x, __y); }  freeRule.Add(__v0); }   }
        { if(!_json["times"].IsNumber) { throw new SerializationException(); }  times = _json["times"]; }
        { if(!_json["pop_yn"].IsNumber) { throw new SerializationException(); }  popYn = _json["pop_yn"]; }
        PostInit();
    }

    public gift(int id, int group, string name, int name_para, int ratio, int display, System.Collections.Generic.List<UnityEngine.Vector3> reward, int op_yn, int price, System.Collections.Generic.List<UnityEngine.Vector2> free_rule, int times, int pop_yn ) 
    {
        this.id = id;
        this.group = group;
        this.name = name;
        this.namePara = name_para;
        this.ratio = ratio;
        this.display = display;
        this.reward = reward;
        this.opYn = op_yn;
        this.price = price;
        this.freeRule = free_rule;
        this.times = times;
        this.popYn = pop_yn;
        
        PostInit();
    }

    public static gift Deserializegift(JSONNode _json)
    {
        return new config.gift(_json);
    }

    /// <summary>
    /// 补给ID
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 组
    /// </summary>
    public int group { get; private set; }
    /// <summary>
    /// 街区补给-名称
    /// </summary>
    public string name { get; private set; }
    /// <summary>
    /// 名称参数
    /// </summary>
    public int namePara { get; private set; }
    /// <summary>
    /// 返利比
    /// </summary>
    public int ratio { get; private set; }
    /// <summary>
    /// 特殊奖励展示
    /// </summary>
    public int display { get; private set; }
    /// <summary>
    /// 奖励
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> reward { get; private set; }
    /// <summary>
    /// 是否显示原价
    /// </summary>
    public int opYn { get; private set; }
    /// <summary>
    /// 价格
    /// </summary>
    public int price { get; private set; }
    /// <summary>
    /// 免费规则
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector2> freeRule { get; private set; }
    /// <summary>
    /// 可购买次数
    /// </summary>
    public int times { get; private set; }
    /// <summary>
    /// 是否弹出
    /// </summary>
    public int popYn { get; private set; }
    public const int __ID__ = -28125092;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "group:" + group + ","
        + "name:" + name + ","
        + "namePara:" + namePara + ","
        + "ratio:" + ratio + ","
        + "display:" + display + ","
        + "reward:" + Bright.Common.StringUtil.CollectionToString(reward) + ","
        + "opYn:" + opYn + ","
        + "price:" + price + ","
        + "freeRule:" + Bright.Common.StringUtil.CollectionToString(freeRule) + ","
        + "times:" + times + ","
        + "popYn:" + popYn + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}