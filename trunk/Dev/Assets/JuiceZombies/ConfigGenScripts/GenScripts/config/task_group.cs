//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class task_group :  Bright.Config.BeanBase 
{
    public task_group(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["tag_func"].IsNumber) { throw new SerializationException(); }  tagFunc = _json["tag_func"]; }
        { if(!_json["name"].IsString) { throw new SerializationException(); }  name = _json["name"]; }
        { if(!_json["desc"].IsString) { throw new SerializationException(); }  desc = _json["desc"]; }
        { if(!_json["icon"].IsString) { throw new SerializationException(); }  icon = _json["icon"]; }
        { if(!_json["sort"].IsNumber) { throw new SerializationException(); }  sort = _json["sort"]; }
        { if(!_json["day"].IsNumber) { throw new SerializationException(); }  day = _json["day"]; }
        PostInit();
    }

    public task_group(int id, int tag_func, string name, string desc, string icon, int sort, int day ) 
    {
        this.id = id;
        this.tagFunc = tag_func;
        this.name = name;
        this.desc = desc;
        this.icon = icon;
        this.sort = sort;
        this.day = day;
        
        PostInit();
    }

    public static task_group Deserializetask_group(JSONNode _json)
    {
        return new config.task_group(_json);
    }

    /// <summary>
    /// 任务组id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 所属模块id
    /// </summary>
    public int tagFunc { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string name { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string desc { get; private set; }
    /// <summary>
    /// 图标(图片资源)
    /// </summary>
    public string icon { get; private set; }
    /// <summary>
    /// 排序
    /// </summary>
    public int sort { get; private set; }
    /// <summary>
    /// 天数
    /// </summary>
    public int day { get; private set; }
    public const int __ID__ = -1787169423;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "tagFunc:" + tagFunc + ","
        + "name:" + name + ","
        + "desc:" + desc + ","
        + "icon:" + icon + ","
        + "sort:" + sort + ","
        + "day:" + day + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}