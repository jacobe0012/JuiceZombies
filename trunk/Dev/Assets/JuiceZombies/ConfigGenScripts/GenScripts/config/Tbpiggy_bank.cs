//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class Tbpiggy_bank
{
    private readonly Dictionary<int, config.piggy_bank> _dataMap;
    private readonly List<config.piggy_bank> _dataList;
    
    public Tbpiggy_bank(JSONNode _json)
    {
        _dataMap = new Dictionary<int, config.piggy_bank>();
        _dataList = new List<config.piggy_bank>();
        
        foreach(JSONNode _row in _json.Children)
        {
            var _v = config.piggy_bank.Deserializepiggy_bank(_row);
            _dataList.Add(_v);
            _dataMap.Add(_v.id, _v);
        }
        PostInit();
    }

    public Dictionary<int, config.piggy_bank> DataMap => _dataMap;
    public List<config.piggy_bank> DataList => _dataList;

    public config.piggy_bank GetOrDefault(int key) => _dataMap.TryGetValue(key, out var v) ? v : null;
    public config.piggy_bank Get(int key) => _dataMap[key];
    public config.piggy_bank this[int key] => _dataMap[key];

    public void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var v in _dataList)
        {
            v.Resolve(_tables);
        }
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var v in _dataList)
        {
            v.TranslateText(translator);
        }
    }
    
    
    partial void PostInit();
    partial void PostResolve();
    
}
}