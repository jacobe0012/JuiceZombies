//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class battle_item :  Bright.Config.BeanBase 
{
    public battle_item(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["model"].IsString) { throw new SerializationException(); }  model = _json["model"]; }
        { if(!_json["auto_pick_yn"].IsNumber) { throw new SerializationException(); }  autoPickYn = _json["auto_pick_yn"]; }
        { if(!_json["pick_range"].IsNumber) { throw new SerializationException(); }  pickRange = _json["pick_range"]; }
        { if(!_json["pick_type"].IsNumber) { throw new SerializationException(); }  pickType = _json["pick_type"]; }
        { if(!_json["type"].IsNumber) { throw new SerializationException(); }  type = _json["type"]; }
        { var __json0 = _json["effect"]; if(!__json0.IsArray) { throw new SerializationException(); } effect = new System.Collections.Generic.List<UnityEngine.Vector3>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { UnityEngine.Vector3 __v0;  { var _json2 = __e0; if(!_json2.IsObject) { throw new SerializationException(); } float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } float __z; { if(!_json2["z"].IsNumber) { throw new SerializationException(); }  __z = _json2["z"]; }  __v0 = new UnityEngine.Vector3(__x, __y,__z); }  effect.Add(__v0); }   }
        PostInit();
    }

    public battle_item(int id, string model, int auto_pick_yn, int pick_range, int pick_type, int type, System.Collections.Generic.List<UnityEngine.Vector3> effect ) 
    {
        this.id = id;
        this.model = model;
        this.autoPickYn = auto_pick_yn;
        this.pickRange = pick_range;
        this.pickType = pick_type;
        this.type = type;
        this.effect = effect;
        
        PostInit();
    }

    public static battle_item Deserializebattle_item(JSONNode _json)
    {
        return new config.battle_item(_json);
    }

    /// <summary>
    /// id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 道具模型
    /// </summary>
    public string model { get; private set; }
    /// <summary>
    /// 是否自动拾取
    /// </summary>
    public int autoPickYn { get; private set; }
    /// <summary>
    /// 拾取范围
    /// </summary>
    public int pickRange { get; private set; }
    /// <summary>
    /// 拾取类型
    /// </summary>
    public int pickType { get; private set; }
    /// <summary>
    /// 道具类型
    /// </summary>
    public int type { get; private set; }
    /// <summary>
    /// 道具效果
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> effect { get; private set; }
    public const int __ID__ = -2011693682;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "model:" + model + ","
        + "autoPickYn:" + autoPickYn + ","
        + "pickRange:" + pickRange + ","
        + "pickType:" + pickType + ","
        + "type:" + type + ","
        + "effect:" + Bright.Common.StringUtil.CollectionToString(effect) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}