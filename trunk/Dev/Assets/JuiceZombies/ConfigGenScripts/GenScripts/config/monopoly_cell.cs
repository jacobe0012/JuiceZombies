//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class monopoly_cell :  Bright.Config.BeanBase 
{
    public monopoly_cell(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["group"].IsNumber) { throw new SerializationException(); }  group = _json["group"]; }
        { if(!_json["number"].IsNumber) { throw new SerializationException(); }  number = _json["number"]; }
        { if(!_json["monopoly_event"].IsNumber) { throw new SerializationException(); }  monopolyEvent = _json["monopoly_event"]; }
        { var __json0 = _json["reward"]; if(!__json0.IsArray) { throw new SerializationException(); } reward = new System.Collections.Generic.List<UnityEngine.Vector3>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { UnityEngine.Vector3 __v0;  { var _json2 = __e0; if(!_json2.IsObject) { throw new SerializationException(); } float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } float __z; { if(!_json2["z"].IsNumber) { throw new SerializationException(); }  __z = _json2["z"]; }  __v0 = new UnityEngine.Vector3(__x, __y,__z); }  reward.Add(__v0); }   }
        PostInit();
    }

    public monopoly_cell(int id, int group, int number, int monopoly_event, System.Collections.Generic.List<UnityEngine.Vector3> reward ) 
    {
        this.id = id;
        this.group = group;
        this.number = number;
        this.monopolyEvent = monopoly_event;
        this.reward = reward;
        
        PostInit();
    }

    public static monopoly_cell Deserializemonopoly_cell(JSONNode _json)
    {
        return new config.monopoly_cell(_json);
    }

    /// <summary>
    /// 格子id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 分组
    /// </summary>
    public int group { get; private set; }
    /// <summary>
    /// 编号
    /// </summary>
    public int number { get; private set; }
    /// <summary>
    /// 大富翁事件
    /// </summary>
    public int monopolyEvent { get; private set; }
    /// <summary>
    /// 单元格停留奖励
    /// </summary>
    public System.Collections.Generic.List<UnityEngine.Vector3> reward { get; private set; }
    public const int __ID__ = 1951326406;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "group:" + group + ","
        + "number:" + number + ","
        + "monopolyEvent:" + monopolyEvent + ","
        + "reward:" + Bright.Common.StringUtil.CollectionToString(reward) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}