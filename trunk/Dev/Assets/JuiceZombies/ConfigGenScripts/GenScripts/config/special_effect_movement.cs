//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.config
{ 

public sealed partial class special_effect_movement :  Bright.Config.BeanBase 
{
    public special_effect_movement(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  id = _json["id"]; }
        { if(!_json["type"].IsNumber) { throw new SerializationException(); }  type = _json["type"]; }
        { if(!_json["para1"].IsNumber) { throw new SerializationException(); }  para1 = _json["para1"]; }
        { if(!_json["para2"].IsNumber) { throw new SerializationException(); }  para2 = _json["para2"]; }
        { if(!_json["para3"].IsNumber) { throw new SerializationException(); }  para3 = _json["para3"]; }
        { if(!_json["para4"].IsNumber) { throw new SerializationException(); }  para4 = _json["para4"]; }
        PostInit();
    }

    public special_effect_movement(int id, int type, int para1, int para2, int para3, int para4 ) 
    {
        this.id = id;
        this.type = type;
        this.para1 = para1;
        this.para2 = para2;
        this.para3 = para3;
        this.para4 = para4;
        
        PostInit();
    }

    public static special_effect_movement Deserializespecial_effect_movement(JSONNode _json)
    {
        return new config.special_effect_movement(_json);
    }

    /// <summary>
    /// id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 类型
    /// </summary>
    public int type { get; private set; }
    /// <summary>
    /// 参数1
    /// </summary>
    public int para1 { get; private set; }
    /// <summary>
    /// 参数2
    /// </summary>
    public int para2 { get; private set; }
    /// <summary>
    /// 参数3
    /// </summary>
    public int para3 { get; private set; }
    /// <summary>
    /// 参数4
    /// </summary>
    public int para4 { get; private set; }
    public const int __ID__ = -868763285;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "type:" + type + ","
        + "para1:" + para1 + ","
        + "para2:" + para2 + ","
        + "para3:" + para3 + ","
        + "para4:" + para4 + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}