//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using Cysharp.Threading.Tasks;
using SimpleJSON;


namespace cfg
{ 
   
public sealed partial class Tables
{
    public config.Tbattr_self Tbattr_self {get; private set; }
    public config.Tbart Tbart {get; private set; }
    public config.Tblanguage Tblanguage {get; private set; }
    public config.Tbskill_effectElement Tbskill_effectElement {get; private set; }
    public config.Tbskill_effectNew Tbskill_effectNew {get; private set; }
    public config.Tbbattle_status Tbbattle_status {get; private set; }
    public config.Tbbullet Tbbullet {get; private set; }
    public config.Tbactivity Tbactivity {get; private set; }
    public config.Tbbattlepass Tbbattlepass {get; private set; }
    public config.Tbbattlepass_exp Tbbattlepass_exp {get; private set; }
    public config.Tbbattlepass_reward Tbbattlepass_reward {get; private set; }
    public config.Tbdays_challenge Tbdays_challenge {get; private set; }
    public config.Tbdays_sign Tbdays_sign {get; private set; }
    public config.Tbenergy_shop Tbenergy_shop {get; private set; }
    public config.Tbenergy_shop_goods Tbenergy_shop_goods {get; private set; }
    public config.Tbmonopoly Tbmonopoly {get; private set; }
    public config.Tbmonopoly_event Tbmonopoly_event {get; private set; }
    public config.Tbmonopoly_cell Tbmonopoly_cell {get; private set; }
    public config.Tbmonopoly_shop Tbmonopoly_shop {get; private set; }
    public config.Tbmonopoly_event_lotto Tbmonopoly_event_lotto {get; private set; }
    public config.Tbpiggy_bank Tbpiggy_bank {get; private set; }
    public config.Tbbattleshop_stage Tbbattleshop_stage {get; private set; }
    public config.Tbbattleshop_drop Tbbattleshop_drop {get; private set; }
    public config.Tbbattletech Tbbattletech {get; private set; }
    public config.Tbbattletech_drop Tbbattletech_drop {get; private set; }
    public config.Tbbattle_constant Tbbattle_constant {get; private set; }
    public config.Tbattr_variable Tbattr_variable {get; private set; }
    public config.Tbbattle_item Tbbattle_item {get; private set; }
    public config.Tbbattle_drop Tbbattle_drop {get; private set; }
    public config.Tbelement Tbelement {get; private set; }
    public config.Tbelement_effect Tbelement_effect {get; private set; }
    public config.Tbevent_0 Tbevent_0 {get; private set; }
    public config.Tbanecdote Tbanecdote {get; private set; }
    public config.Tbevent_type Tbevent_type {get; private set; }
    public config.Tblevel Tblevel {get; private set; }
    public config.Tbmonster Tbmonster {get; private set; }
    public config.Tbmonster_attr Tbmonster_attr {get; private set; }
    public config.Tbmonster_model Tbmonster_model {get; private set; }
    public config.Tbmonster_feature Tbmonster_feature {get; private set; }
    public config.Tbmonster_type Tbmonster_type {get; private set; }
    public config.Tbmodule_refresh Tbmodule_refresh {get; private set; }
    public config.Tbmodule_template Tbmodule_template {get; private set; }
    public config.Tbmonster_template Tbmonster_template {get; private set; }
    public config.Tbmonster_foration Tbmonster_foration {get; private set; }
    public config.Tbscene Tbscene {get; private set; }
    public config.Tbscene_module Tbscene_module {get; private set; }
    public config.Tbenvironment Tbenvironment {get; private set; }
    public config.Tbscene_boss Tbscene_boss {get; private set; }
    public config.Tbskill Tbskill {get; private set; }
    public config.Tbskill_binding Tbskill_binding {get; private set; }
    public config.Tbskill_binding_rank Tbskill_binding_rank {get; private set; }
    public config.Tbskill_quality Tbskill_quality {get; private set; }
    public config.Tbspecial_effect Tbspecial_effect {get; private set; }
    public config.Tbspecial_effect_movement Tbspecial_effect_movement {get; private set; }
    public config.Tbtalent Tbtalent {get; private set; }
    public config.Tbtalent_level Tbtalent_level {get; private set; }
    public config.Tbweapon Tbweapon {get; private set; }
    public config.Tbplayer_weapon_index Tbplayer_weapon_index {get; private set; }
    public config.Tbannounce Tbannounce {get; private set; }
    public config.Tbaudio Tbaudio {get; private set; }
    public config.Tbconstant Tbconstant {get; private set; }
    public config.Tberrorcode Tberrorcode {get; private set; }
    public config.Tbguide Tbguide {get; private set; }
    public config.Tbblock Tbblock {get; private set; }
    public config.Tbpower Tbpower {get; private set; }
    public config.Tbracist Tbracist {get; private set; }
    public config.Tbmail Tbmail {get; private set; }
    public config.Tbquality Tbquality {get; private set; }
    public config.Tbsetting Tbsetting {get; private set; }
    public config.Tbsetting_language Tbsetting_language {get; private set; }
    public config.Tbshare Tbshare {get; private set; }
    public config.Tbfont Tbfont {get; private set; }
    public config.Tbtag Tbtag {get; private set; }
    public config.Tbtag_func Tbtag_func {get; private set; }
    public config.Tbthird_party Tbthird_party {get; private set; }
    public config.Tbuser_avatar Tbuser_avatar {get; private set; }
    public config.Tbuser_variable Tbuser_variable {get; private set; }
    public config.Tbuser_level Tbuser_level {get; private set; }
    public config.Tbplayer_role Tbplayer_role {get; private set; }
    public config.Tbdraw_box Tbdraw_box {get; private set; }
    public config.Tbdraw_banner Tbdraw_banner {get; private set; }
    public config.Tbdrop Tbdrop {get; private set; }
    public config.Tbequip_data Tbequip_data {get; private set; }
    public config.Tbequip_level Tbequip_level {get; private set; }
    public config.Tbequip_pos Tbequip_pos {get; private set; }
    public config.Tbequip_quality Tbequip_quality {get; private set; }
    public config.Tbgift Tbgift {get; private set; }
    public config.Tbgift_group Tbgift_group {get; private set; }
    public config.Tbitem Tbitem {get; private set; }
    public config.Tbshop_daily Tbshop_daily {get; private set; }
    public config.Tbfund Tbfund {get; private set; }
    public config.Tbfund_reward Tbfund_reward {get; private set; }
    public config.Tbrecharge Tbrecharge {get; private set; }
    public config.Tbprice Tbprice {get; private set; }
    public config.Tbspecials Tbspecials {get; private set; }
    public config.Tbfr Tbfr {get; private set; }
    public config.Tbmonthly Tbmonthly {get; private set; }
    public config.Tbgoods Tbgoods {get; private set; }
    public config.TbmonthCard TbmonthCard {get; private set; }
    public config.Tbachieve Tbachieve {get; private set; }
    public config.Tbachieve_group Tbachieve_group {get; private set; }
    public config.Tbchallenge Tbchallenge {get; private set; }
    public config.Tbchapter Tbchapter {get; private set; }
    public config.Tbchapter_box Tbchapter_box {get; private set; }
    public config.Tbsweep_times Tbsweep_times {get; private set; }
    public config.Tbsign_daily Tbsign_daily {get; private set; }
    public config.Tbsign_acc Tbsign_acc {get; private set; }
    public config.Tbtask Tbtask {get; private set; }
    public config.Tbtask_type Tbtask_type {get; private set; }
    public config.Tbtask_group Tbtask_group {get; private set; }
    public config.Tbtask_score Tbtask_score {get; private set; }

    public Tables() { }
    public Tables(System.Func<string, JSONNode> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        Tbattr_self = new config.Tbattr_self(loader("config_tbattr_self")); 
        tables.Add("config.Tbattr_self", Tbattr_self);
        Tbart = new config.Tbart(loader("config_tbart")); 
        tables.Add("config.Tbart", Tbart);
        Tblanguage = new config.Tblanguage(loader("config_tblanguage")); 
        tables.Add("config.Tblanguage", Tblanguage);
        Tbskill_effectElement = new config.Tbskill_effectElement(loader("config_tbskill_effectelement")); 
        tables.Add("config.Tbskill_effectElement", Tbskill_effectElement);
        Tbskill_effectNew = new config.Tbskill_effectNew(loader("config_tbskill_effectnew")); 
        tables.Add("config.Tbskill_effectNew", Tbskill_effectNew);
        Tbbattle_status = new config.Tbbattle_status(loader("config_tbbattle_status")); 
        tables.Add("config.Tbbattle_status", Tbbattle_status);
        Tbbullet = new config.Tbbullet(loader("config_tbbullet")); 
        tables.Add("config.Tbbullet", Tbbullet);
        Tbactivity = new config.Tbactivity(loader("config_tbactivity")); 
        tables.Add("config.Tbactivity", Tbactivity);
        Tbbattlepass = new config.Tbbattlepass(loader("config_tbbattlepass")); 
        tables.Add("config.Tbbattlepass", Tbbattlepass);
        Tbbattlepass_exp = new config.Tbbattlepass_exp(loader("config_tbbattlepass_exp")); 
        tables.Add("config.Tbbattlepass_exp", Tbbattlepass_exp);
        Tbbattlepass_reward = new config.Tbbattlepass_reward(loader("config_tbbattlepass_reward")); 
        tables.Add("config.Tbbattlepass_reward", Tbbattlepass_reward);
        Tbdays_challenge = new config.Tbdays_challenge(loader("config_tbdays_challenge")); 
        tables.Add("config.Tbdays_challenge", Tbdays_challenge);
        Tbdays_sign = new config.Tbdays_sign(loader("config_tbdays_sign")); 
        tables.Add("config.Tbdays_sign", Tbdays_sign);
        Tbenergy_shop = new config.Tbenergy_shop(loader("config_tbenergy_shop")); 
        tables.Add("config.Tbenergy_shop", Tbenergy_shop);
        Tbenergy_shop_goods = new config.Tbenergy_shop_goods(loader("config_tbenergy_shop_goods")); 
        tables.Add("config.Tbenergy_shop_goods", Tbenergy_shop_goods);
        Tbmonopoly = new config.Tbmonopoly(loader("config_tbmonopoly")); 
        tables.Add("config.Tbmonopoly", Tbmonopoly);
        Tbmonopoly_event = new config.Tbmonopoly_event(loader("config_tbmonopoly_event")); 
        tables.Add("config.Tbmonopoly_event", Tbmonopoly_event);
        Tbmonopoly_cell = new config.Tbmonopoly_cell(loader("config_tbmonopoly_cell")); 
        tables.Add("config.Tbmonopoly_cell", Tbmonopoly_cell);
        Tbmonopoly_shop = new config.Tbmonopoly_shop(loader("config_tbmonopoly_shop")); 
        tables.Add("config.Tbmonopoly_shop", Tbmonopoly_shop);
        Tbmonopoly_event_lotto = new config.Tbmonopoly_event_lotto(loader("config_tbmonopoly_event_lotto")); 
        tables.Add("config.Tbmonopoly_event_lotto", Tbmonopoly_event_lotto);
        Tbpiggy_bank = new config.Tbpiggy_bank(loader("config_tbpiggy_bank")); 
        tables.Add("config.Tbpiggy_bank", Tbpiggy_bank);
        Tbbattleshop_stage = new config.Tbbattleshop_stage(loader("config_tbbattleshop_stage")); 
        tables.Add("config.Tbbattleshop_stage", Tbbattleshop_stage);
        Tbbattleshop_drop = new config.Tbbattleshop_drop(loader("config_tbbattleshop_drop")); 
        tables.Add("config.Tbbattleshop_drop", Tbbattleshop_drop);
        Tbbattletech = new config.Tbbattletech(loader("config_tbbattletech")); 
        tables.Add("config.Tbbattletech", Tbbattletech);
        Tbbattletech_drop = new config.Tbbattletech_drop(loader("config_tbbattletech_drop")); 
        tables.Add("config.Tbbattletech_drop", Tbbattletech_drop);
        Tbbattle_constant = new config.Tbbattle_constant(loader("config_tbbattle_constant")); 
        tables.Add("config.Tbbattle_constant", Tbbattle_constant);
        Tbattr_variable = new config.Tbattr_variable(loader("config_tbattr_variable")); 
        tables.Add("config.Tbattr_variable", Tbattr_variable);
        Tbbattle_item = new config.Tbbattle_item(loader("config_tbbattle_item")); 
        tables.Add("config.Tbbattle_item", Tbbattle_item);
        Tbbattle_drop = new config.Tbbattle_drop(loader("config_tbbattle_drop")); 
        tables.Add("config.Tbbattle_drop", Tbbattle_drop);
        Tbelement = new config.Tbelement(loader("config_tbelement")); 
        tables.Add("config.Tbelement", Tbelement);
        Tbelement_effect = new config.Tbelement_effect(loader("config_tbelement_effect")); 
        tables.Add("config.Tbelement_effect", Tbelement_effect);
        Tbevent_0 = new config.Tbevent_0(loader("config_tbevent_0")); 
        tables.Add("config.Tbevent_0", Tbevent_0);
        Tbanecdote = new config.Tbanecdote(loader("config_tbanecdote")); 
        tables.Add("config.Tbanecdote", Tbanecdote);
        Tbevent_type = new config.Tbevent_type(loader("config_tbevent_type")); 
        tables.Add("config.Tbevent_type", Tbevent_type);
        Tblevel = new config.Tblevel(loader("config_tblevel")); 
        tables.Add("config.Tblevel", Tblevel);
        Tbmonster = new config.Tbmonster(loader("config_tbmonster")); 
        tables.Add("config.Tbmonster", Tbmonster);
        Tbmonster_attr = new config.Tbmonster_attr(loader("config_tbmonster_attr")); 
        tables.Add("config.Tbmonster_attr", Tbmonster_attr);
        Tbmonster_model = new config.Tbmonster_model(loader("config_tbmonster_model")); 
        tables.Add("config.Tbmonster_model", Tbmonster_model);
        Tbmonster_feature = new config.Tbmonster_feature(loader("config_tbmonster_feature")); 
        tables.Add("config.Tbmonster_feature", Tbmonster_feature);
        Tbmonster_type = new config.Tbmonster_type(loader("config_tbmonster_type")); 
        tables.Add("config.Tbmonster_type", Tbmonster_type);
        Tbmodule_refresh = new config.Tbmodule_refresh(loader("config_tbmodule_refresh")); 
        tables.Add("config.Tbmodule_refresh", Tbmodule_refresh);
        Tbmodule_template = new config.Tbmodule_template(loader("config_tbmodule_template")); 
        tables.Add("config.Tbmodule_template", Tbmodule_template);
        Tbmonster_template = new config.Tbmonster_template(loader("config_tbmonster_template")); 
        tables.Add("config.Tbmonster_template", Tbmonster_template);
        Tbmonster_foration = new config.Tbmonster_foration(loader("config_tbmonster_foration")); 
        tables.Add("config.Tbmonster_foration", Tbmonster_foration);
        Tbscene = new config.Tbscene(loader("config_tbscene")); 
        tables.Add("config.Tbscene", Tbscene);
        Tbscene_module = new config.Tbscene_module(loader("config_tbscene_module")); 
        tables.Add("config.Tbscene_module", Tbscene_module);
        Tbenvironment = new config.Tbenvironment(loader("config_tbenvironment")); 
        tables.Add("config.Tbenvironment", Tbenvironment);
        Tbscene_boss = new config.Tbscene_boss(loader("config_tbscene_boss")); 
        tables.Add("config.Tbscene_boss", Tbscene_boss);
        Tbskill = new config.Tbskill(loader("config_tbskill")); 
        tables.Add("config.Tbskill", Tbskill);
        Tbskill_binding = new config.Tbskill_binding(loader("config_tbskill_binding")); 
        tables.Add("config.Tbskill_binding", Tbskill_binding);
        Tbskill_binding_rank = new config.Tbskill_binding_rank(loader("config_tbskill_binding_rank")); 
        tables.Add("config.Tbskill_binding_rank", Tbskill_binding_rank);
        Tbskill_quality = new config.Tbskill_quality(loader("config_tbskill_quality")); 
        tables.Add("config.Tbskill_quality", Tbskill_quality);
        Tbspecial_effect = new config.Tbspecial_effect(loader("config_tbspecial_effect")); 
        tables.Add("config.Tbspecial_effect", Tbspecial_effect);
        Tbspecial_effect_movement = new config.Tbspecial_effect_movement(loader("config_tbspecial_effect_movement")); 
        tables.Add("config.Tbspecial_effect_movement", Tbspecial_effect_movement);
        Tbtalent = new config.Tbtalent(loader("config_tbtalent")); 
        tables.Add("config.Tbtalent", Tbtalent);
        Tbtalent_level = new config.Tbtalent_level(loader("config_tbtalent_level")); 
        tables.Add("config.Tbtalent_level", Tbtalent_level);
        Tbweapon = new config.Tbweapon(loader("config_tbweapon")); 
        tables.Add("config.Tbweapon", Tbweapon);
        Tbplayer_weapon_index = new config.Tbplayer_weapon_index(loader("config_tbplayer_weapon_index")); 
        tables.Add("config.Tbplayer_weapon_index", Tbplayer_weapon_index);
        Tbannounce = new config.Tbannounce(loader("config_tbannounce")); 
        tables.Add("config.Tbannounce", Tbannounce);
        Tbaudio = new config.Tbaudio(loader("config_tbaudio")); 
        tables.Add("config.Tbaudio", Tbaudio);
        Tbconstant = new config.Tbconstant(loader("config_tbconstant")); 
        tables.Add("config.Tbconstant", Tbconstant);
        Tberrorcode = new config.Tberrorcode(loader("config_tberrorcode")); 
        tables.Add("config.Tberrorcode", Tberrorcode);
        Tbguide = new config.Tbguide(loader("config_tbguide")); 
        tables.Add("config.Tbguide", Tbguide);
        Tbblock = new config.Tbblock(loader("config_tbblock")); 
        tables.Add("config.Tbblock", Tbblock);
        Tbpower = new config.Tbpower(loader("config_tbpower")); 
        tables.Add("config.Tbpower", Tbpower);
        Tbracist = new config.Tbracist(loader("config_tbracist")); 
        tables.Add("config.Tbracist", Tbracist);
        Tbmail = new config.Tbmail(loader("config_tbmail")); 
        tables.Add("config.Tbmail", Tbmail);
        Tbquality = new config.Tbquality(loader("config_tbquality")); 
        tables.Add("config.Tbquality", Tbquality);
        Tbsetting = new config.Tbsetting(loader("config_tbsetting")); 
        tables.Add("config.Tbsetting", Tbsetting);
        Tbsetting_language = new config.Tbsetting_language(loader("config_tbsetting_language")); 
        tables.Add("config.Tbsetting_language", Tbsetting_language);
        Tbshare = new config.Tbshare(loader("config_tbshare")); 
        tables.Add("config.Tbshare", Tbshare);
        Tbfont = new config.Tbfont(loader("config_tbfont")); 
        tables.Add("config.Tbfont", Tbfont);
        Tbtag = new config.Tbtag(loader("config_tbtag")); 
        tables.Add("config.Tbtag", Tbtag);
        Tbtag_func = new config.Tbtag_func(loader("config_tbtag_func")); 
        tables.Add("config.Tbtag_func", Tbtag_func);
        Tbthird_party = new config.Tbthird_party(loader("config_tbthird_party")); 
        tables.Add("config.Tbthird_party", Tbthird_party);
        Tbuser_avatar = new config.Tbuser_avatar(loader("config_tbuser_avatar")); 
        tables.Add("config.Tbuser_avatar", Tbuser_avatar);
        Tbuser_variable = new config.Tbuser_variable(loader("config_tbuser_variable")); 
        tables.Add("config.Tbuser_variable", Tbuser_variable);
        Tbuser_level = new config.Tbuser_level(loader("config_tbuser_level")); 
        tables.Add("config.Tbuser_level", Tbuser_level);
        Tbplayer_role = new config.Tbplayer_role(loader("config_tbplayer_role")); 
        tables.Add("config.Tbplayer_role", Tbplayer_role);
        Tbdraw_box = new config.Tbdraw_box(loader("config_tbdraw_box")); 
        tables.Add("config.Tbdraw_box", Tbdraw_box);
        Tbdraw_banner = new config.Tbdraw_banner(loader("config_tbdraw_banner")); 
        tables.Add("config.Tbdraw_banner", Tbdraw_banner);
        Tbdrop = new config.Tbdrop(loader("config_tbdrop")); 
        tables.Add("config.Tbdrop", Tbdrop);
        Tbequip_data = new config.Tbequip_data(loader("config_tbequip_data")); 
        tables.Add("config.Tbequip_data", Tbequip_data);
        Tbequip_level = new config.Tbequip_level(loader("config_tbequip_level")); 
        tables.Add("config.Tbequip_level", Tbequip_level);
        Tbequip_pos = new config.Tbequip_pos(loader("config_tbequip_pos")); 
        tables.Add("config.Tbequip_pos", Tbequip_pos);
        Tbequip_quality = new config.Tbequip_quality(loader("config_tbequip_quality")); 
        tables.Add("config.Tbequip_quality", Tbequip_quality);
        Tbgift = new config.Tbgift(loader("config_tbgift")); 
        tables.Add("config.Tbgift", Tbgift);
        Tbgift_group = new config.Tbgift_group(loader("config_tbgift_group")); 
        tables.Add("config.Tbgift_group", Tbgift_group);
        Tbitem = new config.Tbitem(loader("config_tbitem")); 
        tables.Add("config.Tbitem", Tbitem);
        Tbshop_daily = new config.Tbshop_daily(loader("config_tbshop_daily")); 
        tables.Add("config.Tbshop_daily", Tbshop_daily);
        Tbfund = new config.Tbfund(loader("config_tbfund")); 
        tables.Add("config.Tbfund", Tbfund);
        Tbfund_reward = new config.Tbfund_reward(loader("config_tbfund_reward")); 
        tables.Add("config.Tbfund_reward", Tbfund_reward);
        Tbrecharge = new config.Tbrecharge(loader("config_tbrecharge")); 
        tables.Add("config.Tbrecharge", Tbrecharge);
        Tbprice = new config.Tbprice(loader("config_tbprice")); 
        tables.Add("config.Tbprice", Tbprice);
        Tbspecials = new config.Tbspecials(loader("config_tbspecials")); 
        tables.Add("config.Tbspecials", Tbspecials);
        Tbfr = new config.Tbfr(loader("config_tbfr")); 
        tables.Add("config.Tbfr", Tbfr);
        Tbmonthly = new config.Tbmonthly(loader("config_tbmonthly")); 
        tables.Add("config.Tbmonthly", Tbmonthly);
        Tbgoods = new config.Tbgoods(loader("config_tbgoods")); 
        tables.Add("config.Tbgoods", Tbgoods);
        TbmonthCard = new config.TbmonthCard(loader("config_tbmonthcard")); 
        tables.Add("config.TbmonthCard", TbmonthCard);
        Tbachieve = new config.Tbachieve(loader("config_tbachieve")); 
        tables.Add("config.Tbachieve", Tbachieve);
        Tbachieve_group = new config.Tbachieve_group(loader("config_tbachieve_group")); 
        tables.Add("config.Tbachieve_group", Tbachieve_group);
        Tbchallenge = new config.Tbchallenge(loader("config_tbchallenge")); 
        tables.Add("config.Tbchallenge", Tbchallenge);
        Tbchapter = new config.Tbchapter(loader("config_tbchapter")); 
        tables.Add("config.Tbchapter", Tbchapter);
        Tbchapter_box = new config.Tbchapter_box(loader("config_tbchapter_box")); 
        tables.Add("config.Tbchapter_box", Tbchapter_box);
        Tbsweep_times = new config.Tbsweep_times(loader("config_tbsweep_times")); 
        tables.Add("config.Tbsweep_times", Tbsweep_times);
        Tbsign_daily = new config.Tbsign_daily(loader("config_tbsign_daily")); 
        tables.Add("config.Tbsign_daily", Tbsign_daily);
        Tbsign_acc = new config.Tbsign_acc(loader("config_tbsign_acc")); 
        tables.Add("config.Tbsign_acc", Tbsign_acc);
        Tbtask = new config.Tbtask(loader("config_tbtask")); 
        tables.Add("config.Tbtask", Tbtask);
        Tbtask_type = new config.Tbtask_type(loader("config_tbtask_type")); 
        tables.Add("config.Tbtask_type", Tbtask_type);
        Tbtask_group = new config.Tbtask_group(loader("config_tbtask_group")); 
        tables.Add("config.Tbtask_group", Tbtask_group);
        Tbtask_score = new config.Tbtask_score(loader("config_tbtask_score")); 
        tables.Add("config.Tbtask_score", Tbtask_score);
        PostInit();

        Tbattr_self.Resolve(tables); 
        Tbart.Resolve(tables); 
        Tblanguage.Resolve(tables); 
        Tbskill_effectElement.Resolve(tables); 
        Tbskill_effectNew.Resolve(tables); 
        Tbbattle_status.Resolve(tables); 
        Tbbullet.Resolve(tables); 
        Tbactivity.Resolve(tables); 
        Tbbattlepass.Resolve(tables); 
        Tbbattlepass_exp.Resolve(tables); 
        Tbbattlepass_reward.Resolve(tables); 
        Tbdays_challenge.Resolve(tables); 
        Tbdays_sign.Resolve(tables); 
        Tbenergy_shop.Resolve(tables); 
        Tbenergy_shop_goods.Resolve(tables); 
        Tbmonopoly.Resolve(tables); 
        Tbmonopoly_event.Resolve(tables); 
        Tbmonopoly_cell.Resolve(tables); 
        Tbmonopoly_shop.Resolve(tables); 
        Tbmonopoly_event_lotto.Resolve(tables); 
        Tbpiggy_bank.Resolve(tables); 
        Tbbattleshop_stage.Resolve(tables); 
        Tbbattleshop_drop.Resolve(tables); 
        Tbbattletech.Resolve(tables); 
        Tbbattletech_drop.Resolve(tables); 
        Tbbattle_constant.Resolve(tables); 
        Tbattr_variable.Resolve(tables); 
        Tbbattle_item.Resolve(tables); 
        Tbbattle_drop.Resolve(tables); 
        Tbelement.Resolve(tables); 
        Tbelement_effect.Resolve(tables); 
        Tbevent_0.Resolve(tables); 
        Tbanecdote.Resolve(tables); 
        Tbevent_type.Resolve(tables); 
        Tblevel.Resolve(tables); 
        Tbmonster.Resolve(tables); 
        Tbmonster_attr.Resolve(tables); 
        Tbmonster_model.Resolve(tables); 
        Tbmonster_feature.Resolve(tables); 
        Tbmonster_type.Resolve(tables); 
        Tbmodule_refresh.Resolve(tables); 
        Tbmodule_template.Resolve(tables); 
        Tbmonster_template.Resolve(tables); 
        Tbmonster_foration.Resolve(tables); 
        Tbscene.Resolve(tables); 
        Tbscene_module.Resolve(tables); 
        Tbenvironment.Resolve(tables); 
        Tbscene_boss.Resolve(tables); 
        Tbskill.Resolve(tables); 
        Tbskill_binding.Resolve(tables); 
        Tbskill_binding_rank.Resolve(tables); 
        Tbskill_quality.Resolve(tables); 
        Tbspecial_effect.Resolve(tables); 
        Tbspecial_effect_movement.Resolve(tables); 
        Tbtalent.Resolve(tables); 
        Tbtalent_level.Resolve(tables); 
        Tbweapon.Resolve(tables); 
        Tbplayer_weapon_index.Resolve(tables); 
        Tbannounce.Resolve(tables); 
        Tbaudio.Resolve(tables); 
        Tbconstant.Resolve(tables); 
        Tberrorcode.Resolve(tables); 
        Tbguide.Resolve(tables); 
        Tbblock.Resolve(tables); 
        Tbpower.Resolve(tables); 
        Tbracist.Resolve(tables); 
        Tbmail.Resolve(tables); 
        Tbquality.Resolve(tables); 
        Tbsetting.Resolve(tables); 
        Tbsetting_language.Resolve(tables); 
        Tbshare.Resolve(tables); 
        Tbfont.Resolve(tables); 
        Tbtag.Resolve(tables); 
        Tbtag_func.Resolve(tables); 
        Tbthird_party.Resolve(tables); 
        Tbuser_avatar.Resolve(tables); 
        Tbuser_variable.Resolve(tables); 
        Tbuser_level.Resolve(tables); 
        Tbplayer_role.Resolve(tables); 
        Tbdraw_box.Resolve(tables); 
        Tbdraw_banner.Resolve(tables); 
        Tbdrop.Resolve(tables); 
        Tbequip_data.Resolve(tables); 
        Tbequip_level.Resolve(tables); 
        Tbequip_pos.Resolve(tables); 
        Tbequip_quality.Resolve(tables); 
        Tbgift.Resolve(tables); 
        Tbgift_group.Resolve(tables); 
        Tbitem.Resolve(tables); 
        Tbshop_daily.Resolve(tables); 
        Tbfund.Resolve(tables); 
        Tbfund_reward.Resolve(tables); 
        Tbrecharge.Resolve(tables); 
        Tbprice.Resolve(tables); 
        Tbspecials.Resolve(tables); 
        Tbfr.Resolve(tables); 
        Tbmonthly.Resolve(tables); 
        Tbgoods.Resolve(tables); 
        TbmonthCard.Resolve(tables); 
        Tbachieve.Resolve(tables); 
        Tbachieve_group.Resolve(tables); 
        Tbchallenge.Resolve(tables); 
        Tbchapter.Resolve(tables); 
        Tbchapter_box.Resolve(tables); 
        Tbsweep_times.Resolve(tables); 
        Tbsign_daily.Resolve(tables); 
        Tbsign_acc.Resolve(tables); 
        Tbtask.Resolve(tables); 
        Tbtask_type.Resolve(tables); 
        Tbtask_group.Resolve(tables); 
        Tbtask_score.Resolve(tables); 
        PostResolve();
    }

    public async UniTask LoadAsync(System.Func<string, UniTask<JSONNode>> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        Tbattr_self = new config.Tbattr_self(await loader("config_tbattr_self")); 
        tables.Add("config.Tbattr_self", Tbattr_self);
        Tbart = new config.Tbart(await loader("config_tbart")); 
        tables.Add("config.Tbart", Tbart);
        Tblanguage = new config.Tblanguage(await loader("config_tblanguage")); 
        tables.Add("config.Tblanguage", Tblanguage);
        Tbskill_effectElement = new config.Tbskill_effectElement(await loader("config_tbskill_effectelement")); 
        tables.Add("config.Tbskill_effectElement", Tbskill_effectElement);
        Tbskill_effectNew = new config.Tbskill_effectNew(await loader("config_tbskill_effectnew")); 
        tables.Add("config.Tbskill_effectNew", Tbskill_effectNew);
        Tbbattle_status = new config.Tbbattle_status(await loader("config_tbbattle_status")); 
        tables.Add("config.Tbbattle_status", Tbbattle_status);
        Tbbullet = new config.Tbbullet(await loader("config_tbbullet")); 
        tables.Add("config.Tbbullet", Tbbullet);
        Tbactivity = new config.Tbactivity(await loader("config_tbactivity")); 
        tables.Add("config.Tbactivity", Tbactivity);
        Tbbattlepass = new config.Tbbattlepass(await loader("config_tbbattlepass")); 
        tables.Add("config.Tbbattlepass", Tbbattlepass);
        Tbbattlepass_exp = new config.Tbbattlepass_exp(await loader("config_tbbattlepass_exp")); 
        tables.Add("config.Tbbattlepass_exp", Tbbattlepass_exp);
        Tbbattlepass_reward = new config.Tbbattlepass_reward(await loader("config_tbbattlepass_reward")); 
        tables.Add("config.Tbbattlepass_reward", Tbbattlepass_reward);
        Tbdays_challenge = new config.Tbdays_challenge(await loader("config_tbdays_challenge")); 
        tables.Add("config.Tbdays_challenge", Tbdays_challenge);
        Tbdays_sign = new config.Tbdays_sign(await loader("config_tbdays_sign")); 
        tables.Add("config.Tbdays_sign", Tbdays_sign);
        Tbenergy_shop = new config.Tbenergy_shop(await loader("config_tbenergy_shop")); 
        tables.Add("config.Tbenergy_shop", Tbenergy_shop);
        Tbenergy_shop_goods = new config.Tbenergy_shop_goods(await loader("config_tbenergy_shop_goods")); 
        tables.Add("config.Tbenergy_shop_goods", Tbenergy_shop_goods);
        Tbmonopoly = new config.Tbmonopoly(await loader("config_tbmonopoly")); 
        tables.Add("config.Tbmonopoly", Tbmonopoly);
        Tbmonopoly_event = new config.Tbmonopoly_event(await loader("config_tbmonopoly_event")); 
        tables.Add("config.Tbmonopoly_event", Tbmonopoly_event);
        Tbmonopoly_cell = new config.Tbmonopoly_cell(await loader("config_tbmonopoly_cell")); 
        tables.Add("config.Tbmonopoly_cell", Tbmonopoly_cell);
        Tbmonopoly_shop = new config.Tbmonopoly_shop(await loader("config_tbmonopoly_shop")); 
        tables.Add("config.Tbmonopoly_shop", Tbmonopoly_shop);
        Tbmonopoly_event_lotto = new config.Tbmonopoly_event_lotto(await loader("config_tbmonopoly_event_lotto")); 
        tables.Add("config.Tbmonopoly_event_lotto", Tbmonopoly_event_lotto);
        Tbpiggy_bank = new config.Tbpiggy_bank(await loader("config_tbpiggy_bank")); 
        tables.Add("config.Tbpiggy_bank", Tbpiggy_bank);
        Tbbattleshop_stage = new config.Tbbattleshop_stage(await loader("config_tbbattleshop_stage")); 
        tables.Add("config.Tbbattleshop_stage", Tbbattleshop_stage);
        Tbbattleshop_drop = new config.Tbbattleshop_drop(await loader("config_tbbattleshop_drop")); 
        tables.Add("config.Tbbattleshop_drop", Tbbattleshop_drop);
        Tbbattletech = new config.Tbbattletech(await loader("config_tbbattletech")); 
        tables.Add("config.Tbbattletech", Tbbattletech);
        Tbbattletech_drop = new config.Tbbattletech_drop(await loader("config_tbbattletech_drop")); 
        tables.Add("config.Tbbattletech_drop", Tbbattletech_drop);
        Tbbattle_constant = new config.Tbbattle_constant(await loader("config_tbbattle_constant")); 
        tables.Add("config.Tbbattle_constant", Tbbattle_constant);
        Tbattr_variable = new config.Tbattr_variable(await loader("config_tbattr_variable")); 
        tables.Add("config.Tbattr_variable", Tbattr_variable);
        Tbbattle_item = new config.Tbbattle_item(await loader("config_tbbattle_item")); 
        tables.Add("config.Tbbattle_item", Tbbattle_item);
        Tbbattle_drop = new config.Tbbattle_drop(await loader("config_tbbattle_drop")); 
        tables.Add("config.Tbbattle_drop", Tbbattle_drop);
        Tbelement = new config.Tbelement(await loader("config_tbelement")); 
        tables.Add("config.Tbelement", Tbelement);
        Tbelement_effect = new config.Tbelement_effect(await loader("config_tbelement_effect")); 
        tables.Add("config.Tbelement_effect", Tbelement_effect);
        Tbevent_0 = new config.Tbevent_0(await loader("config_tbevent_0")); 
        tables.Add("config.Tbevent_0", Tbevent_0);
        Tbanecdote = new config.Tbanecdote(await loader("config_tbanecdote")); 
        tables.Add("config.Tbanecdote", Tbanecdote);
        Tbevent_type = new config.Tbevent_type(await loader("config_tbevent_type")); 
        tables.Add("config.Tbevent_type", Tbevent_type);
        Tblevel = new config.Tblevel(await loader("config_tblevel")); 
        tables.Add("config.Tblevel", Tblevel);
        Tbmonster = new config.Tbmonster(await loader("config_tbmonster")); 
        tables.Add("config.Tbmonster", Tbmonster);
        Tbmonster_attr = new config.Tbmonster_attr(await loader("config_tbmonster_attr")); 
        tables.Add("config.Tbmonster_attr", Tbmonster_attr);
        Tbmonster_model = new config.Tbmonster_model(await loader("config_tbmonster_model")); 
        tables.Add("config.Tbmonster_model", Tbmonster_model);
        Tbmonster_feature = new config.Tbmonster_feature(await loader("config_tbmonster_feature")); 
        tables.Add("config.Tbmonster_feature", Tbmonster_feature);
        Tbmonster_type = new config.Tbmonster_type(await loader("config_tbmonster_type")); 
        tables.Add("config.Tbmonster_type", Tbmonster_type);
        Tbmodule_refresh = new config.Tbmodule_refresh(await loader("config_tbmodule_refresh")); 
        tables.Add("config.Tbmodule_refresh", Tbmodule_refresh);
        Tbmodule_template = new config.Tbmodule_template(await loader("config_tbmodule_template")); 
        tables.Add("config.Tbmodule_template", Tbmodule_template);
        Tbmonster_template = new config.Tbmonster_template(await loader("config_tbmonster_template")); 
        tables.Add("config.Tbmonster_template", Tbmonster_template);
        Tbmonster_foration = new config.Tbmonster_foration(await loader("config_tbmonster_foration")); 
        tables.Add("config.Tbmonster_foration", Tbmonster_foration);
        Tbscene = new config.Tbscene(await loader("config_tbscene")); 
        tables.Add("config.Tbscene", Tbscene);
        Tbscene_module = new config.Tbscene_module(await loader("config_tbscene_module")); 
        tables.Add("config.Tbscene_module", Tbscene_module);
        Tbenvironment = new config.Tbenvironment(await loader("config_tbenvironment")); 
        tables.Add("config.Tbenvironment", Tbenvironment);
        Tbscene_boss = new config.Tbscene_boss(await loader("config_tbscene_boss")); 
        tables.Add("config.Tbscene_boss", Tbscene_boss);
        Tbskill = new config.Tbskill(await loader("config_tbskill")); 
        tables.Add("config.Tbskill", Tbskill);
        Tbskill_binding = new config.Tbskill_binding(await loader("config_tbskill_binding")); 
        tables.Add("config.Tbskill_binding", Tbskill_binding);
        Tbskill_binding_rank = new config.Tbskill_binding_rank(await loader("config_tbskill_binding_rank")); 
        tables.Add("config.Tbskill_binding_rank", Tbskill_binding_rank);
        Tbskill_quality = new config.Tbskill_quality(await loader("config_tbskill_quality")); 
        tables.Add("config.Tbskill_quality", Tbskill_quality);
        Tbspecial_effect = new config.Tbspecial_effect(await loader("config_tbspecial_effect")); 
        tables.Add("config.Tbspecial_effect", Tbspecial_effect);
        Tbspecial_effect_movement = new config.Tbspecial_effect_movement(await loader("config_tbspecial_effect_movement")); 
        tables.Add("config.Tbspecial_effect_movement", Tbspecial_effect_movement);
        Tbtalent = new config.Tbtalent(await loader("config_tbtalent")); 
        tables.Add("config.Tbtalent", Tbtalent);
        Tbtalent_level = new config.Tbtalent_level(await loader("config_tbtalent_level")); 
        tables.Add("config.Tbtalent_level", Tbtalent_level);
        Tbweapon = new config.Tbweapon(await loader("config_tbweapon")); 
        tables.Add("config.Tbweapon", Tbweapon);
        Tbplayer_weapon_index = new config.Tbplayer_weapon_index(await loader("config_tbplayer_weapon_index")); 
        tables.Add("config.Tbplayer_weapon_index", Tbplayer_weapon_index);
        Tbannounce = new config.Tbannounce(await loader("config_tbannounce")); 
        tables.Add("config.Tbannounce", Tbannounce);
        Tbaudio = new config.Tbaudio(await loader("config_tbaudio")); 
        tables.Add("config.Tbaudio", Tbaudio);
        Tbconstant = new config.Tbconstant(await loader("config_tbconstant")); 
        tables.Add("config.Tbconstant", Tbconstant);
        Tberrorcode = new config.Tberrorcode(await loader("config_tberrorcode")); 
        tables.Add("config.Tberrorcode", Tberrorcode);
        Tbguide = new config.Tbguide(await loader("config_tbguide")); 
        tables.Add("config.Tbguide", Tbguide);
        Tbblock = new config.Tbblock(await loader("config_tbblock")); 
        tables.Add("config.Tbblock", Tbblock);
        Tbpower = new config.Tbpower(await loader("config_tbpower")); 
        tables.Add("config.Tbpower", Tbpower);
        Tbracist = new config.Tbracist(await loader("config_tbracist")); 
        tables.Add("config.Tbracist", Tbracist);
        Tbmail = new config.Tbmail(await loader("config_tbmail")); 
        tables.Add("config.Tbmail", Tbmail);
        Tbquality = new config.Tbquality(await loader("config_tbquality")); 
        tables.Add("config.Tbquality", Tbquality);
        Tbsetting = new config.Tbsetting(await loader("config_tbsetting")); 
        tables.Add("config.Tbsetting", Tbsetting);
        Tbsetting_language = new config.Tbsetting_language(await loader("config_tbsetting_language")); 
        tables.Add("config.Tbsetting_language", Tbsetting_language);
        Tbshare = new config.Tbshare(await loader("config_tbshare")); 
        tables.Add("config.Tbshare", Tbshare);
        Tbfont = new config.Tbfont(await loader("config_tbfont")); 
        tables.Add("config.Tbfont", Tbfont);
        Tbtag = new config.Tbtag(await loader("config_tbtag")); 
        tables.Add("config.Tbtag", Tbtag);
        Tbtag_func = new config.Tbtag_func(await loader("config_tbtag_func")); 
        tables.Add("config.Tbtag_func", Tbtag_func);
        Tbthird_party = new config.Tbthird_party(await loader("config_tbthird_party")); 
        tables.Add("config.Tbthird_party", Tbthird_party);
        Tbuser_avatar = new config.Tbuser_avatar(await loader("config_tbuser_avatar")); 
        tables.Add("config.Tbuser_avatar", Tbuser_avatar);
        Tbuser_variable = new config.Tbuser_variable(await loader("config_tbuser_variable")); 
        tables.Add("config.Tbuser_variable", Tbuser_variable);
        Tbuser_level = new config.Tbuser_level(await loader("config_tbuser_level")); 
        tables.Add("config.Tbuser_level", Tbuser_level);
        Tbplayer_role = new config.Tbplayer_role(await loader("config_tbplayer_role")); 
        tables.Add("config.Tbplayer_role", Tbplayer_role);
        Tbdraw_box = new config.Tbdraw_box(await loader("config_tbdraw_box")); 
        tables.Add("config.Tbdraw_box", Tbdraw_box);
        Tbdraw_banner = new config.Tbdraw_banner(await loader("config_tbdraw_banner")); 
        tables.Add("config.Tbdraw_banner", Tbdraw_banner);
        Tbdrop = new config.Tbdrop(await loader("config_tbdrop")); 
        tables.Add("config.Tbdrop", Tbdrop);
        Tbequip_data = new config.Tbequip_data(await loader("config_tbequip_data")); 
        tables.Add("config.Tbequip_data", Tbequip_data);
        Tbequip_level = new config.Tbequip_level(await loader("config_tbequip_level")); 
        tables.Add("config.Tbequip_level", Tbequip_level);
        Tbequip_pos = new config.Tbequip_pos(await loader("config_tbequip_pos")); 
        tables.Add("config.Tbequip_pos", Tbequip_pos);
        Tbequip_quality = new config.Tbequip_quality(await loader("config_tbequip_quality")); 
        tables.Add("config.Tbequip_quality", Tbequip_quality);
        Tbgift = new config.Tbgift(await loader("config_tbgift")); 
        tables.Add("config.Tbgift", Tbgift);
        Tbgift_group = new config.Tbgift_group(await loader("config_tbgift_group")); 
        tables.Add("config.Tbgift_group", Tbgift_group);
        Tbitem = new config.Tbitem(await loader("config_tbitem")); 
        tables.Add("config.Tbitem", Tbitem);
        Tbshop_daily = new config.Tbshop_daily(await loader("config_tbshop_daily")); 
        tables.Add("config.Tbshop_daily", Tbshop_daily);
        Tbfund = new config.Tbfund(await loader("config_tbfund")); 
        tables.Add("config.Tbfund", Tbfund);
        Tbfund_reward = new config.Tbfund_reward(await loader("config_tbfund_reward")); 
        tables.Add("config.Tbfund_reward", Tbfund_reward);
        Tbrecharge = new config.Tbrecharge(await loader("config_tbrecharge")); 
        tables.Add("config.Tbrecharge", Tbrecharge);
        Tbprice = new config.Tbprice(await loader("config_tbprice")); 
        tables.Add("config.Tbprice", Tbprice);
        Tbspecials = new config.Tbspecials(await loader("config_tbspecials")); 
        tables.Add("config.Tbspecials", Tbspecials);
        Tbfr = new config.Tbfr(await loader("config_tbfr")); 
        tables.Add("config.Tbfr", Tbfr);
        Tbmonthly = new config.Tbmonthly(await loader("config_tbmonthly")); 
        tables.Add("config.Tbmonthly", Tbmonthly);
        Tbgoods = new config.Tbgoods(await loader("config_tbgoods")); 
        tables.Add("config.Tbgoods", Tbgoods);
        TbmonthCard = new config.TbmonthCard(await loader("config_tbmonthcard")); 
        tables.Add("config.TbmonthCard", TbmonthCard);
        Tbachieve = new config.Tbachieve(await loader("config_tbachieve")); 
        tables.Add("config.Tbachieve", Tbachieve);
        Tbachieve_group = new config.Tbachieve_group(await loader("config_tbachieve_group")); 
        tables.Add("config.Tbachieve_group", Tbachieve_group);
        Tbchallenge = new config.Tbchallenge(await loader("config_tbchallenge")); 
        tables.Add("config.Tbchallenge", Tbchallenge);
        Tbchapter = new config.Tbchapter(await loader("config_tbchapter")); 
        tables.Add("config.Tbchapter", Tbchapter);
        Tbchapter_box = new config.Tbchapter_box(await loader("config_tbchapter_box")); 
        tables.Add("config.Tbchapter_box", Tbchapter_box);
        Tbsweep_times = new config.Tbsweep_times(await loader("config_tbsweep_times")); 
        tables.Add("config.Tbsweep_times", Tbsweep_times);
        Tbsign_daily = new config.Tbsign_daily(await loader("config_tbsign_daily")); 
        tables.Add("config.Tbsign_daily", Tbsign_daily);
        Tbsign_acc = new config.Tbsign_acc(await loader("config_tbsign_acc")); 
        tables.Add("config.Tbsign_acc", Tbsign_acc);
        Tbtask = new config.Tbtask(await loader("config_tbtask")); 
        tables.Add("config.Tbtask", Tbtask);
        Tbtask_type = new config.Tbtask_type(await loader("config_tbtask_type")); 
        tables.Add("config.Tbtask_type", Tbtask_type);
        Tbtask_group = new config.Tbtask_group(await loader("config_tbtask_group")); 
        tables.Add("config.Tbtask_group", Tbtask_group);
        Tbtask_score = new config.Tbtask_score(await loader("config_tbtask_score")); 
        tables.Add("config.Tbtask_score", Tbtask_score);
        PostInit();

        Tbattr_self.Resolve(tables); 
        Tbart.Resolve(tables); 
        Tblanguage.Resolve(tables); 
        Tbskill_effectElement.Resolve(tables); 
        Tbskill_effectNew.Resolve(tables); 
        Tbbattle_status.Resolve(tables); 
        Tbbullet.Resolve(tables); 
        Tbactivity.Resolve(tables); 
        Tbbattlepass.Resolve(tables); 
        Tbbattlepass_exp.Resolve(tables); 
        Tbbattlepass_reward.Resolve(tables); 
        Tbdays_challenge.Resolve(tables); 
        Tbdays_sign.Resolve(tables); 
        Tbenergy_shop.Resolve(tables); 
        Tbenergy_shop_goods.Resolve(tables); 
        Tbmonopoly.Resolve(tables); 
        Tbmonopoly_event.Resolve(tables); 
        Tbmonopoly_cell.Resolve(tables); 
        Tbmonopoly_shop.Resolve(tables); 
        Tbmonopoly_event_lotto.Resolve(tables); 
        Tbpiggy_bank.Resolve(tables); 
        Tbbattleshop_stage.Resolve(tables); 
        Tbbattleshop_drop.Resolve(tables); 
        Tbbattletech.Resolve(tables); 
        Tbbattletech_drop.Resolve(tables); 
        Tbbattle_constant.Resolve(tables); 
        Tbattr_variable.Resolve(tables); 
        Tbbattle_item.Resolve(tables); 
        Tbbattle_drop.Resolve(tables); 
        Tbelement.Resolve(tables); 
        Tbelement_effect.Resolve(tables); 
        Tbevent_0.Resolve(tables); 
        Tbanecdote.Resolve(tables); 
        Tbevent_type.Resolve(tables); 
        Tblevel.Resolve(tables); 
        Tbmonster.Resolve(tables); 
        Tbmonster_attr.Resolve(tables); 
        Tbmonster_model.Resolve(tables); 
        Tbmonster_feature.Resolve(tables); 
        Tbmonster_type.Resolve(tables); 
        Tbmodule_refresh.Resolve(tables); 
        Tbmodule_template.Resolve(tables); 
        Tbmonster_template.Resolve(tables); 
        Tbmonster_foration.Resolve(tables); 
        Tbscene.Resolve(tables); 
        Tbscene_module.Resolve(tables); 
        Tbenvironment.Resolve(tables); 
        Tbscene_boss.Resolve(tables); 
        Tbskill.Resolve(tables); 
        Tbskill_binding.Resolve(tables); 
        Tbskill_binding_rank.Resolve(tables); 
        Tbskill_quality.Resolve(tables); 
        Tbspecial_effect.Resolve(tables); 
        Tbspecial_effect_movement.Resolve(tables); 
        Tbtalent.Resolve(tables); 
        Tbtalent_level.Resolve(tables); 
        Tbweapon.Resolve(tables); 
        Tbplayer_weapon_index.Resolve(tables); 
        Tbannounce.Resolve(tables); 
        Tbaudio.Resolve(tables); 
        Tbconstant.Resolve(tables); 
        Tberrorcode.Resolve(tables); 
        Tbguide.Resolve(tables); 
        Tbblock.Resolve(tables); 
        Tbpower.Resolve(tables); 
        Tbracist.Resolve(tables); 
        Tbmail.Resolve(tables); 
        Tbquality.Resolve(tables); 
        Tbsetting.Resolve(tables); 
        Tbsetting_language.Resolve(tables); 
        Tbshare.Resolve(tables); 
        Tbfont.Resolve(tables); 
        Tbtag.Resolve(tables); 
        Tbtag_func.Resolve(tables); 
        Tbthird_party.Resolve(tables); 
        Tbuser_avatar.Resolve(tables); 
        Tbuser_variable.Resolve(tables); 
        Tbuser_level.Resolve(tables); 
        Tbplayer_role.Resolve(tables); 
        Tbdraw_box.Resolve(tables); 
        Tbdraw_banner.Resolve(tables); 
        Tbdrop.Resolve(tables); 
        Tbequip_data.Resolve(tables); 
        Tbequip_level.Resolve(tables); 
        Tbequip_pos.Resolve(tables); 
        Tbequip_quality.Resolve(tables); 
        Tbgift.Resolve(tables); 
        Tbgift_group.Resolve(tables); 
        Tbitem.Resolve(tables); 
        Tbshop_daily.Resolve(tables); 
        Tbfund.Resolve(tables); 
        Tbfund_reward.Resolve(tables); 
        Tbrecharge.Resolve(tables); 
        Tbprice.Resolve(tables); 
        Tbspecials.Resolve(tables); 
        Tbfr.Resolve(tables); 
        Tbmonthly.Resolve(tables); 
        Tbgoods.Resolve(tables); 
        TbmonthCard.Resolve(tables); 
        Tbachieve.Resolve(tables); 
        Tbachieve_group.Resolve(tables); 
        Tbchallenge.Resolve(tables); 
        Tbchapter.Resolve(tables); 
        Tbchapter_box.Resolve(tables); 
        Tbsweep_times.Resolve(tables); 
        Tbsign_daily.Resolve(tables); 
        Tbsign_acc.Resolve(tables); 
        Tbtask.Resolve(tables); 
        Tbtask_type.Resolve(tables); 
        Tbtask_group.Resolve(tables); 
        Tbtask_score.Resolve(tables); 
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        Tbattr_self.TranslateText(translator); 
        Tbart.TranslateText(translator); 
        Tblanguage.TranslateText(translator); 
        Tbskill_effectElement.TranslateText(translator); 
        Tbskill_effectNew.TranslateText(translator); 
        Tbbattle_status.TranslateText(translator); 
        Tbbullet.TranslateText(translator); 
        Tbactivity.TranslateText(translator); 
        Tbbattlepass.TranslateText(translator); 
        Tbbattlepass_exp.TranslateText(translator); 
        Tbbattlepass_reward.TranslateText(translator); 
        Tbdays_challenge.TranslateText(translator); 
        Tbdays_sign.TranslateText(translator); 
        Tbenergy_shop.TranslateText(translator); 
        Tbenergy_shop_goods.TranslateText(translator); 
        Tbmonopoly.TranslateText(translator); 
        Tbmonopoly_event.TranslateText(translator); 
        Tbmonopoly_cell.TranslateText(translator); 
        Tbmonopoly_shop.TranslateText(translator); 
        Tbmonopoly_event_lotto.TranslateText(translator); 
        Tbpiggy_bank.TranslateText(translator); 
        Tbbattleshop_stage.TranslateText(translator); 
        Tbbattleshop_drop.TranslateText(translator); 
        Tbbattletech.TranslateText(translator); 
        Tbbattletech_drop.TranslateText(translator); 
        Tbbattle_constant.TranslateText(translator); 
        Tbattr_variable.TranslateText(translator); 
        Tbbattle_item.TranslateText(translator); 
        Tbbattle_drop.TranslateText(translator); 
        Tbelement.TranslateText(translator); 
        Tbelement_effect.TranslateText(translator); 
        Tbevent_0.TranslateText(translator); 
        Tbanecdote.TranslateText(translator); 
        Tbevent_type.TranslateText(translator); 
        Tblevel.TranslateText(translator); 
        Tbmonster.TranslateText(translator); 
        Tbmonster_attr.TranslateText(translator); 
        Tbmonster_model.TranslateText(translator); 
        Tbmonster_feature.TranslateText(translator); 
        Tbmonster_type.TranslateText(translator); 
        Tbmodule_refresh.TranslateText(translator); 
        Tbmodule_template.TranslateText(translator); 
        Tbmonster_template.TranslateText(translator); 
        Tbmonster_foration.TranslateText(translator); 
        Tbscene.TranslateText(translator); 
        Tbscene_module.TranslateText(translator); 
        Tbenvironment.TranslateText(translator); 
        Tbscene_boss.TranslateText(translator); 
        Tbskill.TranslateText(translator); 
        Tbskill_binding.TranslateText(translator); 
        Tbskill_binding_rank.TranslateText(translator); 
        Tbskill_quality.TranslateText(translator); 
        Tbspecial_effect.TranslateText(translator); 
        Tbspecial_effect_movement.TranslateText(translator); 
        Tbtalent.TranslateText(translator); 
        Tbtalent_level.TranslateText(translator); 
        Tbweapon.TranslateText(translator); 
        Tbplayer_weapon_index.TranslateText(translator); 
        Tbannounce.TranslateText(translator); 
        Tbaudio.TranslateText(translator); 
        Tbconstant.TranslateText(translator); 
        Tberrorcode.TranslateText(translator); 
        Tbguide.TranslateText(translator); 
        Tbblock.TranslateText(translator); 
        Tbpower.TranslateText(translator); 
        Tbracist.TranslateText(translator); 
        Tbmail.TranslateText(translator); 
        Tbquality.TranslateText(translator); 
        Tbsetting.TranslateText(translator); 
        Tbsetting_language.TranslateText(translator); 
        Tbshare.TranslateText(translator); 
        Tbfont.TranslateText(translator); 
        Tbtag.TranslateText(translator); 
        Tbtag_func.TranslateText(translator); 
        Tbthird_party.TranslateText(translator); 
        Tbuser_avatar.TranslateText(translator); 
        Tbuser_variable.TranslateText(translator); 
        Tbuser_level.TranslateText(translator); 
        Tbplayer_role.TranslateText(translator); 
        Tbdraw_box.TranslateText(translator); 
        Tbdraw_banner.TranslateText(translator); 
        Tbdrop.TranslateText(translator); 
        Tbequip_data.TranslateText(translator); 
        Tbequip_level.TranslateText(translator); 
        Tbequip_pos.TranslateText(translator); 
        Tbequip_quality.TranslateText(translator); 
        Tbgift.TranslateText(translator); 
        Tbgift_group.TranslateText(translator); 
        Tbitem.TranslateText(translator); 
        Tbshop_daily.TranslateText(translator); 
        Tbfund.TranslateText(translator); 
        Tbfund_reward.TranslateText(translator); 
        Tbrecharge.TranslateText(translator); 
        Tbprice.TranslateText(translator); 
        Tbspecials.TranslateText(translator); 
        Tbfr.TranslateText(translator); 
        Tbmonthly.TranslateText(translator); 
        Tbgoods.TranslateText(translator); 
        TbmonthCard.TranslateText(translator); 
        Tbachieve.TranslateText(translator); 
        Tbachieve_group.TranslateText(translator); 
        Tbchallenge.TranslateText(translator); 
        Tbchapter.TranslateText(translator); 
        Tbchapter_box.TranslateText(translator); 
        Tbsweep_times.TranslateText(translator); 
        Tbsign_daily.TranslateText(translator); 
        Tbsign_acc.TranslateText(translator); 
        Tbtask.TranslateText(translator); 
        Tbtask_type.TranslateText(translator); 
        Tbtask_group.TranslateText(translator); 
        Tbtask_score.TranslateText(translator); 
    }
    
    partial void PostInit();
    partial void PostResolve();

    
}

}